{"version":3,"sources":["routes.js","Pages/Navigation.js","Pages/Personal_info.js","Pages/Landing.js","components/ButtonTab.js","components/SelectedTab.js","Pages/Breadcrumbs.js","Pages/Symptoms.js","Pages/SymptomList.js","Pages/PreliminaryDiagnosis.js","Pages/clinics_near_me.js","Pages/confirmation.js","App.js","serviceWorker.js","index.js"],"names":["ROUTES","LANDING","INFO","SYMPTOMS","SYMPTOM_LIST","PRELIMINARYDIAGNOSIS","CLINICS","CONFIRMATION","Navigation","className","Navbar","bg","variant","expand","Brand","href","Toggle","aria-controls","Collapse","id","Nav","Link","PreliminaryDiagnosis","INITIAL_STATE","firstName","lastName","email","date","location","error","Personal_info","props","onSubmit","event","state","preventDefault","handleChange","target","setState","name","value","this","isInvalid","Fragment","Container","Card","style","padding","class","Form","Row","Group","as","Col","controlId","Label","Control","onChange","type","placeholder","maxLength","to","Button","disabled","onClick","console","log","localStorage","setItem","substring","message","ProgressBar","now","label","React","Component","Landing","align","marginTop","ButtonTab","useState","Marked","marked","isMarked","arr","array","nameArr","nameArray","useEffect","includes","md","span","offset","index","findIndex","splice","nameIndex","updateArray","push","fontSize","width","backgroundColor","border","borderRadius","color","SelectedTab","list","paddingRight","isDiagnosis","deletion","filter","element","deletionObj","handleClick","Example","Breadcrumb","BreadcrumbItem","Symptoms","MarkedSymptoms","NameSymptoms","getItem","undefined","JSON","parse","isDisabled","updateMarkedSymptoms","bind","removeName","length","uniqueIds","Array","from","Set","stringify","window","reload","fluid","map","key","paddingLeft","animatedComponents","makeAnimated","NamesTab","SymptomList","OptionsList","NamesList","SymptomsArray","Loading","e","symptomsArray","fetch","then","response","json","data","forEach","symptom","obj","ID","Name","catch","marginLeft","Spinner","animation","closeMenuOnSelect","components","isMulti","options","getSymptoms","getBodyPartsID","getBodyParts","MySymptoms","SymptomsList","BodyPartsId","BodyParts","Diagnosis","removeBody","ids","symptoms","method","headers","body","Gender","Age","Body","Title","float","Text","ListGroup","Item","diagnosis","Issue","distance","address","hours","phone","website","List","item","ListItem","paddingBottom","fontWeight","size","Clinics","Confirmation","App","Breadcrumbs","exact","path","component","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.73099911.chunk.js","sourcesContent":["/* Temp routes for testing, update later for prod */\r\nexport const ROUTES = {\r\n    LANDING: \"/\",\r\n    INFO: \"/personal_info\",\r\n    SYMPTOMS: \"/bodysymptoms\",\r\n    SYMPTOM_LIST: \"/symptomlist\",\r\n    PRELIMINARYDIAGNOSIS: \"/preliminarydiagnosis\",\r\n    CLINICS: \"/clinics_near_me\",\r\n    CONFIRMATION: \"/confirmation_page\",\r\n  };","import React from \"react\";\r\nimport { Navbar, Nav } from \"../../node_modules/react-bootstrap\";\r\nimport { ROUTES } from \"../routes\";\r\nimport \"../bootstrap-scoped.scss\";\r\n\r\nconst Navigation = () => (\r\n  <div className=\"bootstrap-scoped\">\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href={ROUTES.LANDING} className=\"brand-name\">\r\n        TEAM FALCON\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href={ROUTES.INFO}>INFO</Nav.Link>\r\n          <Nav.Link href={ROUTES.SYMPTOMS}>SYMPTOMS</Nav.Link>\r\n          <Nav.Link href={ROUTES.PreliminaryDiagnosis}>PRELIMINARY DIAGNOSIS</Nav.Link>\r\n          <Nav.Link href={ROUTES.CLINICS}>CLINICS</Nav.Link>\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </div>\r\n  );\r\n\r\n  export default Navigation;","import React from 'react';\r\nimport { Container, Form, Col, Button, Card, ProgressBar } from \"../../node_modules/react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport { ROUTES } from \"../routes\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"../css/personal_info.css\";\r\n// For the progress bar\r\nimport \"../App.css\";\r\n\r\nconst INITIAL_STATE = {\r\n  firstName: '',\r\n  lastName: '',\r\n  email: '',\r\n  date: '',\r\n  location: '',\r\n  error: null,\r\n};\r\n\r\nclass Personal_info extends React.Component{\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = event => {\r\n    const { ...INITIAL_STATE } = this.state;\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    this.setState({ [target.name]: target.value });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      date,\r\n      location,\r\n      error,\r\n    } = this.state;\r\n\r\n    const isInvalid =\r\n    firstName === '' || lastName === '' ||\r\n    email === '' || date === '' || location === '';\r\n\r\n    return(\r\n\r\n      <React.Fragment>\r\n      \r\n      <Container>\r\n          <Card style={{padding: '20px'}}>\r\n          <h1 class= \"title\">Let's get some information (?)</h1>\r\n          <Form onSubmit={this.onSubmit}>\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridFirstName\">\r\n              <Form.Label class=\"font-weight-bold\">First Name</Form.Label>\r\n              <Form.Control \r\n                  name=\"firstName\"\r\n                  value={firstName}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\" \r\n              />\r\n            </Form.Group>\r\n\r\n          <Form.Group as={Col} controlId=\"formGridLastName\">\r\n              <Form.Label class=\"font-weight-bold\">Last Name</Form.Label>\r\n              <Form.Control \r\n                  name=\"lastName\"\r\n                  value={lastName}\r\n                  onChange={this.handleChange}\r\n                  type=\"text\"\r\n              />\r\n            </Form.Group>\r\n          </Form.Row>\r\n\r\n          <Form.Group controlId=\"formGridEmailAddress\">\r\n            <Form.Label class=\"font-weight-bold\">Email Address</Form.Label>\r\n            <Form.Control\r\n                name=\"email\"\r\n                value={email}\r\n                onChange={this.handleChange}\r\n                type=\"email\"\r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId=\"formGridDateOfBirth\">\r\n            <Form.Label class=\"font-weight-bold\">Date of Birth</Form.Label>\r\n            <Form.Control \r\n                name=\"date\"\r\n                value={date}\r\n                onChange={this.handleChange}\r\n                type=\"date\" \r\n                placeholder= \"YYYY-MM-DD\" \r\n            />\r\n          </Form.Group>\r\n\r\n          <Form.Row>\r\n            <Form.Group as={Col} controlId=\"formGridZipCode\">\r\n              <Form.Label class=\"font-weight-bold\">Location</Form.Label>\r\n              <Form.Control \r\n                name=\"location\"\r\n                value={location}\r\n                onChange={this.handleChange}\r\n                type=\"text\"\r\n                placeholder=\"Zip Code\" \r\n                maxLength={6}\r\n              />\r\n          </Form.Group>\r\n          </Form.Row>\r\n          \r\n          <div class=\"text-center\">\r\n            <Link to={ROUTES.SYMPTOMS}>\r\n              <Button \r\n                      disabled={isInvalid}\r\n                      class=\"text-center\" \r\n                      onClick={() => {\r\n                        console.log(\"The button has been clicked\");\r\n                        localStorage.setItem('age', this.state.date.substring(0, 3));\r\n                      }}\r\n                      variant=\"primary\" \r\n                      type=\"submit\">\r\n                Next: Select Symptoms\r\n              </Button>\r\n              {error && <p>{error.message}</p>}\r\n            </Link>\r\n          </div>\r\n        </Form>\r\n        </Card>\r\n      \r\n      </Container>\r\n\r\n      <div className=\"progress-bar-div\">\r\n        <div className=\"progress-bar-div-center\">\r\n          <ProgressBar now={20} label={\"20%\"} />\r\n        </div>\r\n      </div>\r\n\r\n    </React.Fragment>\r\n    ); \r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Personal_info","import React from 'react'\r\nimport { Container, Row, Col, Button} from 'react-bootstrap';\r\nimport { ROUTES } from '../routes';\r\nimport {Link} from \"react-router-dom\";\r\nimport '../css/landing.css';\r\n\r\nclass Landing extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"background-div\">\r\n        <div className=\"text-center\">\r\n          <h1 className=\"title\">Welcome to this Website</h1>\r\n          <p align=\"center\">This website is dedicated to help people that are\r\n          in need of a doctor's appointment</p>\r\n          <Link to={ROUTES.INFO}>\r\n            <Button \r\n                  onClick={()=>{\r\n                    console.log(\"Button has been clicked\");\r\n                  }}\r\n                  variant=\"primary\"\r\n                  type=\"submit\"\r\n                  style={{marginTop: 'calc(16vh)'}}>Get Started</Button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n\r\n  )\r\n  }\r\n}\r\nexport default Landing;","import React, { useState, useEffect } from 'react';\r\nimport { Button, Col } from 'react-bootstrap';\r\nimport '../css/Symptoms.css';\r\n\r\nexport default function ButtonTab(props) {\r\n    const [marked, isMarked] = useState({Marked: false});\r\n    const arr = props.array;\r\n    const nameArr = props.nameArray;\r\n    const id = props.id;\r\n    const name = props.type;\r\n\r\n    useEffect(() => {\r\n        if(nameArr.includes(name)) {\r\n            isMarked({Marked: true});\r\n        }\r\n    }, [nameArr]);\r\n\r\n    return (\r\n        <Col md={{ span: 1, offset: props.offset ? props.offset : 1 }}>\r\n            <Button onClick={() => {\r\n                if(!marked.Marked) {\r\n                    arr.push(id);\r\n                    nameArr.push(name)\r\n                    props.updateArray(arr, nameArr);\r\n                    isMarked({Marked: true});\r\n                } else {\r\n                    const index = arr.findIndex(value => value === id);\r\n                    arr.splice(index, 1);\r\n                    const nameIndex = nameArr.findIndex(value => value === name)\r\n                    nameArr.splice(nameIndex, 1);\r\n                    props.updateArray(arr, nameArr);\r\n                    isMarked({Marked: false});\r\n                }\r\n            }}\r\n            style={{fontSize: 'calc(1.2vw)', width: 'calc(8.5vw)', backgroundColor: marked.Marked ? '#789E9E' : '#B7D8D6', \r\n            border: 'none', borderRadius: 'calc(1vw)', color: 'black'}}\r\n            >{name}</Button>\r\n        </Col>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport { Button, Col } from 'react-bootstrap';\r\nimport '../css/SymptomList.css';\r\n\r\nexport default function SelectedTab(props) {\r\n    const name = props.name;\r\n    const list = props.list;\r\n\r\n    const handleClick = () => {\r\n        if(props.deletion) {\r\n            console.log('here')\r\n            const index = list.findIndex(value => value === name);\r\n            console.log(index);\r\n            list.splice(index, 1);\r\n            props.deletion(list);\r\n        } else {\r\n            const array = list.filter(element => element.label !== name);\r\n            props.deletionObj(array);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"tab-div\" style={{paddingRight: props.isDiagnosis ? 'calc(1.5vw)' : null}}>\r\n            <h3 className=\"tab-div-name\" >{name}</h3>  \r\n            {props.isDiagnosis ? null : \r\n            <div className=\"remove-tab-div\" onClick={() => handleClick()}>\r\n                <h2 className=\"remove-tab\">X</h2> \r\n            </div>}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Example = (props) => {\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem><Link to='/' className=\"Home\">Team falcon</Link></BreadcrumbItem>\r\n        <BreadcrumbItem><Link to='/personal_info' className=\"Info\">Info</Link></BreadcrumbItem>\r\n        <BreadcrumbItem ><Link to='/bodysymptoms' className=\"Symptoms\">Symptoms</Link></BreadcrumbItem>\r\n        <BreadcrumbItem ><Link to='/symptomlist' className=\"SymptomList\">More Symptoms</Link></BreadcrumbItem>\r\n        <BreadcrumbItem ><Link to='/preliminarydiagnosis' className=\"Priliminarydiagnosis\">Preliminary Diagnosis</Link></BreadcrumbItem>\r\n        <BreadcrumbItem ><Link to='/clinics_near_me' className=\"Clinics\">Clinics</Link></BreadcrumbItem>\r\n      </Breadcrumb>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Example;","import React from 'react';\r\nimport { Container, Row, Col, Button, ProgressBar } from 'react-bootstrap';\r\nimport ButtonTab from '../components/ButtonTab';\r\nimport SelectedTab from '../components/SelectedTab';\r\nimport '../css/Symptoms.css';\r\nimport '../App.css';\r\nimport Breadcrumbs from './Breadcrumbs';\r\nimport { Link } from \"react-router-dom\";\r\nimport { ROUTES } from \"../routes\";\r\n\r\nclass Symptoms extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      MarkedSymptoms: [],\r\n      NameSymptoms: localStorage.getItem('symptom-body') !== null && localStorage.getItem('symptom-body') !== undefined ? JSON.parse(localStorage.getItem('symptom-body')) : [],\r\n      isDisabled: localStorage.getItem('symptom-body') !== null && localStorage.getItem('symptom-body') !== undefined ? false : true,\r\n    }\r\n\r\n    this.updateMarkedSymptoms = this.updateMarkedSymptoms.bind(this);\r\n    this.removeName = this.removeName.bind(this);\r\n  }\r\n\r\n  updateMarkedSymptoms(value, name) {\r\n    if(name.length === 0) {\r\n      this.setState({isDisabled: true});\r\n    } else {\r\n      this.setState({isDisabled: false});\r\n    }\r\n    this.setState({MarkedSymptoms: value, NameSymptoms: name}, () => {\r\n      const uniqueIds = Array.from(new Set(this.state.MarkedSymptoms));\r\n      localStorage.setItem('symptomIds', JSON.stringify(uniqueIds));\r\n      localStorage.setItem('symptom-body', JSON.stringify(this.state.NameSymptoms))\r\n    });\r\n  }\r\n\r\n  removeName(list) {\r\n    this.setState({NameSymptoms: list}, () => {\r\n        localStorage.setItem('symptom-body', JSON.stringify(this.state.NameSymptoms));\r\n        window.location.reload();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.NameSymptoms)\r\n    return (\r\n      <div className=\"symptoms-page\">\r\n        <Container fluid>\r\n          <Row style={{marginTop: 'calc(5vh)'}}>\r\n            <Col md={{ span: 7, offset: 3 }}><h2 className=\"symptoms-page-h2\">Where on the body are you experiencing symptoms (if any)</h2></Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <section className=\"selected-section\">\r\n          <div className=\"select-div\">\r\n              {this.state.NameSymptoms.map(name => {\r\n                  return (\r\n                      <SelectedTab key={name} name={name} list={this.state.NameSymptoms} deletion={this.removeName} />\r\n                  )\r\n              })}\r\n          </div>\r\n          </section>\r\n\r\n        <Container>\r\n          <Row style={{marginTop: 'calc(8vh)'}}>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={16} updateArray={this.updateMarkedSymptoms} type={\"Abdomen\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={16} updateArray={this.updateMarkedSymptoms} type={\"Pelvis\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms }id={16} updateArray={this.updateMarkedSymptoms} type={\"Buttocks\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={7} updateArray={this.updateMarkedSymptoms} type={\"Arms\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={7} updateArray={this.updateMarkedSymptoms} type={\"Shoulder\"}/>\r\n          </Row>\r\n\r\n          <Row style={{marginTop: 'calc(8vh)'}}>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={6} updateArray={this.updateMarkedSymptoms} type={\"Head\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={6} updateArray={this.updateMarkedSymptoms} type={\"Throat\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={6} updateArray={this.updateMarkedSymptoms} type={\"Neck\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={10} updateArray={this.updateMarkedSymptoms} type={\"Legs\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={17} updateArray={this.updateMarkedSymptoms} type={\"Skin\"}/>\r\n          </Row>\r\n\r\n          <Row style={{marginTop: 'calc(8vh)'}}>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={15} updateArray={this.updateMarkedSymptoms} type={\"Chest\"} offset={2}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={15} updateArray={this.updateMarkedSymptoms} type={\"Back\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={17} updateArray={this.updateMarkedSymptoms} type={\"Joints\"}/>\r\n            <ButtonTab array={this.state.MarkedSymptoms} nameArray={this.state.NameSymptoms} id={17} updateArray={this.updateMarkedSymptoms} type={\"General\"}/>\r\n          </Row>\r\n\r\n          <Row style={{marginTop: 'calc(12vh)'}}>\r\n            <Col md={{ span: 3, offset: 5 }}>\r\n              <Link to={ROUTES.SYMPTOM_LIST}>\r\n                <Button \r\n                      onClick={()=>{\r\n                        const uniqueIds = Array.from(new Set(this.state.MarkedSymptoms));\r\n                        localStorage.setItem('symptomIds', JSON.stringify(uniqueIds));\r\n                        localStorage.setItem('symptom-body', JSON.stringify(this.state.NameSymptoms))\r\n                      }}\r\n                      style={{backgroundColor: '#FE817B', border: 'none', borderRadius: 'calc(1vw)', \r\n                      paddingRight: 'calc(1.5vw)', paddingLeft: 'calc(1.5vw)'}}\r\n                      variant=\"primary\"\r\n                      type=\"submit\"\r\n                      disabled={this.state.isDisabled}>Next: Select Symptoms</Button>\r\n              </Link>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n\r\n        <div className=\"progress-bar-div\">\r\n          <div className=\"progress-bar-div-center\">\r\n            <ProgressBar now={40} label={\"40%\"} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nexport default Symptoms","import React from 'react';\r\nimport Select from 'react-select';\r\nimport makeAnimated from 'react-select/animated';\r\nimport { Container, Row, Col, Spinner, Button, ProgressBar } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { ROUTES } from \"../routes\";\r\nimport SelectedTab from '../components/SelectedTab';\r\nimport '../css/SymptomList.css';\r\nimport '../App.css'\r\n\r\nconst animatedComponents = makeAnimated();\r\n\r\nconst NamesTab = localStorage.getItem('symptom-body');\r\n\r\nclass SymptomList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            OptionsList: [],\r\n            NamesList: NamesTab !== null && NamesTab !== undefined  && NamesTab !== 'undefined' ? JSON.parse(localStorage.getItem('symptom-body')) : [],\r\n            SymptomsArray: [],\r\n            Loading: true\r\n        }\r\n\r\n        this.removeName = this.removeName.bind(this);\r\n        this.handleChange = this.handleChange.bind(this);\r\n    }\r\n\r\n    removeName(list) {\r\n        this.setState({NamesList: list}, () => {\r\n            localStorage.setItem('symptom-body', JSON.stringify(this.state.NamesList));\r\n        });\r\n    }\r\n\r\n    handleChange(e) {\r\n        this.setState({SymptomsArray: e}, () => {\r\n            localStorage.setItem('symptom-types', JSON.stringify(this.state.SymptomsArray));\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        let symptomsArray = [];\r\n        if(localStorage.getItem('symptom-types')) {\r\n            symptomsArray = JSON.parse(localStorage.getItem('symptom-types'));\r\n        } \r\n\r\n        fetch('/symptoms')\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            let arr = this.state.OptionsList;\r\n            data.forEach(symptom => {\r\n                let obj = {};\r\n                obj.value = symptom.ID;\r\n                obj.label = symptom.Name;\r\n                arr.push(obj);      \r\n            })\r\n            this.setState({OptionsList: arr, Loading: false, SymptomsArray: symptomsArray}); \r\n        }).catch(error => {\r\n            console.log(error) \r\n        })\r\n    }\r\n\r\n    render() {\r\n        console.log(this.state.NamesList)\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <Row style={{marginLeft: 'calc(8vw)'}}>\r\n                        <Col md={{ span: 4, offset: 4 }}><h2>What are the symptoms?</h2></Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <section className=\"body-section\">\r\n                    <div className=\"body-div\">\r\n                        {this.state.NamesList.map(name => {\r\n                            return (\r\n                                <SelectedTab name={name} list={this.state.NamesList} deletion={this.removeName} />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </section>\r\n\r\n                <section className=\"select-section\">\r\n                    <div className=\"select-div-input\">\r\n                        {this.state.Loading ? \r\n                            <div className=\"spinner-div\"><Spinner animation=\"border\" variant=\"info\" /></div>\r\n                        : \r\n                            <Select\r\n                            closeMenuOnSelect={false}\r\n                            components={animatedComponents}\r\n                            isMulti\r\n                            options={this.state.OptionsList}\r\n                            placeholder={\"Select Symptoms...\"}\r\n                            onChange={(e) => this.handleChange(e)}\r\n                            value={this.state.SymptomsArray}\r\n                        /> } \r\n                    </div>\r\n                </section>\r\n\r\n                <Container>\r\n                    <Row style={{marginTop: 'calc(40vh)'}}>\r\n                        <Col md={{ span: 3, offset: 5 }}>\r\n                        <Link to={ROUTES.PRELIMINARYDIAGNOSIS}>\r\n                            <Button \r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                                style={{backgroundColor: '#FE817B', border: 'none', borderRadius: 'calc(1vw)', \r\n                                paddingRight: 'calc(1.5vw)', paddingLeft: 'calc(1.5vw)'}}\r\n                                disabled={this.state.isDisabled}>Next: Get Diagnosis</Button>\r\n                        </Link>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n                <div className=\"progress-bar-div\">\r\n                    <div className=\"progress-bar-div-center\">\r\n                        <ProgressBar now={60} label={\"60%\"} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SymptomList;","import React from 'react';\r\nimport { Container, Row, Col, ListGroup, Spinner, Card, Button, ProgressBar } from 'react-bootstrap';\r\nimport SelectedTab from '../components/SelectedTab';\r\nimport { Link } from 'react-router-dom';\r\nimport { ROUTES } from \"../routes\";\r\nimport '../css/Diagnosis.css';\r\nimport '../App.css';\r\n\r\nclass PreliminaryDiagnosis extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        const getSymptoms = localStorage.getItem('symptom-types');\r\n        const getBodyPartsID = localStorage.getItem('symptomIds');\r\n        const getBodyParts = localStorage.getItem('symptom-body');\r\n\r\n        this.state = {\r\n            MySymptoms: [],\r\n            SymptomsList: getSymptoms !== null && getSymptoms !== undefined  && getSymptoms !== 'undefined' && getSymptoms !== 'null' ? JSON.parse(getSymptoms) : [],\r\n            BodyPartsId: getBodyPartsID !== null && getBodyPartsID !== undefined  && getBodyPartsID !== 'undefined' ? JSON.parse(getBodyPartsID) : [],\r\n            BodyParts: getBodyParts !== null && getBodyParts !== undefined  && getBodyParts !== 'undefined' ? JSON.parse(getBodyParts) : [],\r\n            Diagnosis: [],\r\n            Loading: true\r\n        }\r\n\r\n        this.removeName = this.removeName.bind(this);\r\n        this.removeBody = this.removeBody.bind(this);\r\n    }\r\n\r\n    removeName(list) {\r\n        this.setState({SymptomsList: list}, () => {\r\n            localStorage.setItem('symptom-types', JSON.stringify(this.state.SymptomsList));\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    removeBody(list) {\r\n        this.setState({BodyParts: list}, () => {\r\n            localStorage.setItem('symptom-body', JSON.stringify(this.state.BodyParts));\r\n            window.location.reload();\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        let ids = []\r\n        this.state.SymptomsList.forEach(symptoms => {\r\n            ids.push(symptoms.value);\r\n        })\r\n\r\n        this.state.BodyPartsId.forEach(symptoms => {\r\n            ids.push(symptoms);\r\n        })\r\n\r\n        fetch('/diagnosis', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                Symptoms: ids,\r\n                Gender: 'male',\r\n                Age: 2000\r\n            })   \r\n        }).then(response => response.json())\r\n        .then(data => {\r\n            console.log(data);\r\n            this.setState({Diagnosis: data, Loading: false});\r\n        }).catch(error => {\r\n            console.log(error)\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container fluid>\r\n                    <Row>\r\n                        <Col md={{ span: 2, offset: 1 }}>\r\n                            <div>\r\n                                <Card style={{width: '25vw', marginTop: 'calc(4vh)'}}>\r\n                                    <Card.Body>\r\n                                    <Card.Title style={{float: 'left', width: '100%'}}>All Selected Symptoms</Card.Title>\r\n                                    <Card.Text style={{float: 'left'}}>\r\n                                        <div className=\"card-tabs-div\">\r\n                                            {this.state.BodyParts.map(body => {\r\n                                                return (\r\n                                                    <SelectedTab name={body} list={this.state.BodyParts} deletion={this.removeBody} isDiagnosis={true} />    \r\n                                                )\r\n                                            })}\r\n                                            {this.state.SymptomsList.map(symptom => {\r\n                                                console.log(symptom)\r\n                                                return (\r\n                                                    <SelectedTab name={symptom.label} list={this.state.SymptomsList} deletionObj={this.removeName}/>\r\n                                                )\r\n                                            })}\r\n                                        </div>\r\n                                    </Card.Text>\r\n                                    </Card.Body>\r\n                                </Card> \r\n                            </div>\r\n                        </Col>\r\n                        <Col  md={{ span: 3, offset: 2 }}>\r\n                            <div className=\"listgroup-div\">\r\n                                <ListGroup variant=\"flush\">\r\n                                    <ListGroup.Item style={{fontSize: 'calc(1.3vw)', backgroundColor: '#4D6466', color: 'white'}}>Possible Diagnosis</ListGroup.Item>\r\n                                    <div className=\"listgroup-item-div\">\r\n                                        {this.state.Loading ? \r\n                                        <div className=\"listgroup-loading\">\r\n                                            <Spinner animation=\"border\" variant=\"info\" />\r\n                                        </div> :\r\n                                        (this.state.Diagnosis.length === 0 ? \r\n                                        <h3 className=\"no-diagnosis\">There appears to be no diagnosis right now...</h3> : this.state.Diagnosis.map(diagnosis => {\r\n                                            return (\r\n                                                <div className=\"single-tile-div\">\r\n                                                    <ListGroup.Item>\r\n                                                        <h3 className=\"single-tile-div-name\">{diagnosis.Issue.Name}</h3>\r\n                                                    </ListGroup.Item>\r\n                                                </div>\r\n                                            )\r\n                                        }))}\r\n                                    </div>\r\n                                </ListGroup>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    {this.state.Loading ? null : \r\n                    <Row style={{marginTop: 'calc(10vh)'}}>\r\n                        <Col md={{ span: 3, offset: 5 }}>\r\n                        <Link to={ROUTES.CLINICS}>\r\n                            <Button \r\n                                variant=\"primary\"\r\n                                type=\"submit\"\r\n                                style={{backgroundColor: '#FE817B', border: 'none', borderRadius: 'calc(1vw)', \r\n                                paddingRight: 'calc(1.5vw)', paddingLeft: 'calc(1.5vw)'}}\r\n                                >Next: Find nearest clinic</Button>\r\n                        </Link>\r\n                        </Col>\r\n                    </Row>}\r\n\r\n                </Container>\r\n\r\n                {this.state.Loading ? null : \r\n                <div className=\"progress-bar-div\">\r\n                    <div className=\"progress-bar-div-center\">\r\n                        <ProgressBar now={80} label={\"80%\"} />\r\n                    </div>\r\n                </div>}\r\n               \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PreliminaryDiagnosis;","import React from 'react';\r\nimport { Card, Container, Button } from 'react-bootstrap';\r\nimport {Link} from \"react-router-dom\";\r\nimport { ROUTES } from \"../routes\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nconst list = [\r\n    {\r\n        id:'1',\r\n        name: 'Downtown Doctors Walk In Medical Clinic',\r\n        distance: \"0.2 mil\",\r\n        address: '720 Spadina Ave #100, Toronto, ON M5S 2T9',\r\n        hours: '9:30 a.m.-5p.m. Monday - Friday',\r\n        phone: '(416) 929-1530',\r\n        website: '',\r\n    },\r\n    {\r\n        id:'2',\r\n        name: 'MCI The Doctors Office Atrium',\r\n        distance: \"0.8 mil\",\r\n        address: '595 Bay St, Toronto, ON M5G 2C2',\r\n        hours: '9:00a.m.-6p.m. Monday - Friday',\r\n        phone: '(416) 598-1703',\r\n        website: 'https://mcithedoctorsoffice.ca/locations/atrium',\r\n    },\r\n    {\r\n        id:'3',\r\n        name: 'Patient Networks Family Medicine Walk In Clinic',\r\n        address: '157 Yonge St, Toronto, ON M5C 1X7',\r\n        distance: \"2.1 mil\",\r\n        hours: '9:00a.m.-4p.m. Monday - Friday',\r\n        phone: '(416) 362-8822',\r\n        website: 'http://www.patientnetworks.ca/',\r\n    },\r\n    {\r\n        id:'4',\r\n        name: 'Cloud Care Clinics',\r\n        address: '55 Dundas St E, Toronto, ON M5B 1C6',\r\n        distance: \"2.5 mil\",\r\n        hours: '9:30a.m.-5p.m. Monday - Friday',\r\n        phone: '(416) 361-6000',\r\n        website: 'http://cloudcareclinics.ca/',\r\n    },\r\n    {\r\n        id:'5',\r\n        name: 'Primacy - Carlton & Church Medical & Walk-In Clinic',\r\n        address: '60 Carlton St, Toronto, ON M5B 1J2',\r\n        distance: \"4.0 mil\",\r\n        hours: '9:30a.m.-4:30p.m. Monday - Friday',\r\n        phone: '(416) 646-1890',\r\n        website: 'http://www.primacyclinics.ca/locations/carlton-and-church/',\r\n    },\r\n    {\r\n        id:'6',\r\n        name: 'Yonge Medical Centre',\r\n        address: '500 Yonge St #300, Toronto, ON M4Y 1X9',\r\n        distance: \"4.8 mil\",\r\n        hours: '9:30a.m.-5p.m. Monday - Friday',\r\n        phone: '(888) 350-2323',\r\n        website: '',\r\n    },\r\n    {\r\n        id:'7',\r\n        name: 'Sanomed Medical Clinic',\r\n        address: '1000 Bay St A, Toronto, ON M5S 3A8',\r\n        distance: \"5.0 mil\",\r\n        hours: '9:30a.m.-5p.m. Monday - Friday',\r\n        phone: '(416) 923-7770',\r\n        website: 'http://sanomedclinic.ca/',\r\n    },\r\n];\r\n/*\r\nclass Clinics extends React.Component {\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n            <Container>\r\n                <h1 class= \"title\">Closest Walk-In Medical Facilities:</h1>\r\n                <Card style={{padding: '20px'}}>\r\n                    {list.map(item => (\r\n                        <li key={item.id}>\r\n                            <div>{item.id}</div>\r\n                            <div>{item.name}</div>\r\n                            <div>{item.address}</div>\r\n                            <div>{item.phone}</div>\r\n                            <div>{item.website}</div>\r\n                        </li>\r\n                    ))}\r\n                </Card>\r\n            </Container>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n*/\r\n\r\nconst Clinics = () =>(\r\n    <React.Fragment>\r\n        <h1 class= \"title\">Closest Walk-In Medical Facilities:</h1>\r\n        <List list={list} />\r\n    </React.Fragment>\r\n);\r\n \r\nconst List = ({ list }) => (\r\n  <ul>\r\n    {list.map(item => (\r\n      <ListItem key={item.id} item={item} />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nconst ListItem = ({ item  }) => (\r\n    \r\n    <React.Fragment>\r\n        <Container class=\"shadow p-3 mb-5 bg-white rounded\" style={{paddingBottom: '5vh'}}>\r\n        <div class = \"shadow p-3 mb-5 bg-white rounded\">\r\n            <Card  style={{padding: '5vw'}}>\r\n                <div><p style={{fontSize: '125%', fontWeight: 'bold'}}>{item.name} <span style={{color: \"gray\"}}><text style={{fontSize: '40%', color: \"gray\"}}>{'\\u2B24'}</text> {item.distance}</span></p></div>\r\n                <div>\r\n                    <span style={{fontWeight: 'bold'}}>Address: </span>{item.address}\r\n                    <span style={{float: \"right\", fontWeight: \"bold\"}}>Estimated Wait Time:</span>\r\n                </div>\r\n                <div>\r\n                    <span style={{fontWeight: 'bold'}}>Hours: </span>\r\n                    {item.hours}\r\n                    <span style={{float: \"right\", fontWeight: \"bold\", fontSize: \"110%\"}}>0 Minutes</span>\r\n                </div>\r\n                <div>\r\n                    <span style={{fontWeight: 'bold'}}>Phone: </span>\r\n                    {item.phone}\r\n                </div>\r\n                <div>\r\n                    {item.website.length > 0 && <span style={{fontWeight: 'bold'}}>Website: <a href={item.website} >{item.website}</a></span>}\r\n                    <Link to={ROUTES.CONFIRMATION}>\r\n                        <Button \r\n                            style={{float: \"right\"}} \r\n                            variant=\"secondary\" \r\n                            type=\"submit\" \r\n                            size=\"lg\">\r\n                            Reserve Appointment\r\n                        </Button>\r\n                    </Link>\r\n                </div>\r\n            </Card>\r\n        </div>    \r\n        </Container>\r\n    </React.Fragment>\r\n);\r\n\r\nexport default Clinics","import React from 'react'\r\n\r\nclass Confirmation extends React.Component {\r\nrender(){\r\n    return(\r\n    <div>\r\n        Confirmation Page\r\n    </div>\r\n      );\r\n   }\r\n}\r\n\r\nexport default Confirmation;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/* Misc */\r\nimport { ROUTES } from \"./routes\";\r\n\r\n/* Components */\r\nimport Navigation from \"./Pages/Navigation\";\r\nimport Personal_info from \"./Pages/Personal_info\";\r\nimport Landing from \"./Pages/Landing\";\r\nimport Symptoms from \"./Pages/Symptoms\";\r\nimport SymptomList from \"./Pages/SymptomList\";\r\nimport Breadcrumbs from \"./Pages/Breadcrumbs\";\r\nimport PreliminaryDiagnosis from  './Pages/PreliminaryDiagnosis';\r\nimport Clinics from \"./Pages/clinics_near_me\";\r\nimport Confirmation from './Pages/confirmation';\r\n\r\nfunction App() {\r\n  return (\r\n    //The router navigates to the different pages\r\n      <Router>\r\n        <Navigation />\r\n        <Breadcrumbs />\r\n        <Switch>\r\n          <Route exact path={ROUTES.LANDING} component={Landing} />\r\n          <Route exact path={ROUTES.INFO} component={Personal_info} />\r\n          <Route exact path={ROUTES.SYMPTOMS} component={Symptoms} />\r\n          <Route exact path={ROUTES.SYMPTOM_LIST} component={SymptomList} />\r\n          <Route exact path={ROUTES.PRELIMINARYDIAGNOSIS} component={PreliminaryDiagnosis} />\r\n          <Route exact path={ROUTES.CLINICS} component={Clinics} />\r\n          <Route exact path={ROUTES.CONFIRMATION} component={Confirmation} />\r\n        </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}