{"version":3,"sources":["components/firebase/context.js","components/firebase/firebase.js","components/firebase/index.js","components/Profile.js","components/Upvote.js","components/PostTile.js","components/Home.js","components/session/context.js","components/session/Authentication.js","components/session/Authorization.js","components/EditComment.js","routes.js","components/Comment.js","components/createStory.js","components/authentication/forgotPassword.js","components/authentication/signup.js","components/authentication/login.js","components/authentication/signout.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","firestore","username","date","Date","data","Email","Username","Timestamp","collection","doc","set","get","profile","where","docs","map","title","link","Title","Link","add","Total","count","getID","getLikeId","likeId","value","console","log","update","isLiked","delete","getPostId","getCommentId","id","undefined","comment","oldTitle","loadLikes","getLikes","commentId","Post","parameter","string","getUid","name","Comment","Name","oldComment","findComment","getId","getPosts","postArray","forEach","post","a","push","getComments","val","getTotalComments","length","getUserLikes","getUserComments","getData","getUserPosts","Profile","useState","location","state","Author","author","timestamp","setTimestamp","Karma","karma","setKarma","Comments","comments","setComments","setPost","useContext","convertToDate","info","toDate","setUTCSeconds","seconds","toString","useEffect","getProfile","then","getUserPostsLikes","likes","res","Container","fluid","Row","Col","md","span","offset","Card","Body","Text","Upvote","Liked","liked","setLiked","Posts","setPosts","getEmail","localStorage","getItem","titles","includes","clicked","downvote","upvote","className","onClick","icon","faCaretDown","faCaretUp","PostTile","history","useHistory","Likes","setLikes","commentTotal","setCommentTotal","num","number","href","pathname","style","marginRight","marginLeft","Home","setTimeout","loadPosts","posts","setState","index","HomeFunction","AuthUserContext","withAuthentication","WithAuthentication","authUser","listener","onAuthStateChanged","Provider","Authorization","condition","route","compose","withRouter","EditComment","newComment","setNewComment","show","setShow","tooltip","Tooltip","editComment","updateComment","window","reload","OverlayTrigger","placement","overlay","delay","hide","e","faEdit","Form","Control","defaultValue","onChange","target","ROUTES","prop","CommentTotal","NewTitle","ShowTextbox","handleClick","bind","remove","editTitle","deletePost","tooltipDelete","tooltipEdit","redirect","loadComments","text","commentPost","componentDidMount","deleteComment","updatePost","removePost","tag","faTrash","Group","controlId","type","placeholder","as","rows","Button","key","url","setUrl","setTitle","validationUrl","setValidationUrl","validationTitle","setValidationTitle","submit","createPost","Label","isInvalid","Feedback","INITIAL_STATE","error","ForgetPasswordFormBase","onSubmit","event","catch","preventDefault","disabled","message","ForgetPasswordLink","to","ForgetPasswordPage","ForgetPasswordForm","SignUpPage","SignUpForm","passwordOne","passwordTwo","SignUpFormBase","createProfile","setItem","SignUpLink","LoginIn","LogInForm","LogInFormBase","loadProfile","NavigationAuth","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","NavigationNonAuth","Navigation","exact","path","component","CommentFunction","createStory","login","forgotPassword","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8TAEMA,EAAkBC,IAAMC,cAAc,MAE/BC,EAAe,SAAAC,GAAS,OAAI,SAAAC,GAAK,OAC1C,kBAACL,EAAgBM,SAAjB,MACG,SAAAC,GAAQ,OAAI,kBAACH,EAAD,iBAAeC,EAAf,CAAsBE,SAAUA,UAIpCP,I,gECLTQ,G,kBAAS,CACbC,OAAQ,0CACRC,WAAY,uCACZC,YAAa,8CACbC,UAAW,uBACXC,cAAe,mCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBCVFC,E,WDcb,aAAe,IAAD,gCASdC,iCAAmC,SAACC,EAAOC,GAAR,OACjC,EAAKC,KAAKC,+BAA+BH,EAAOC,IAVpC,KAYdG,6BAA+B,SAACJ,EAAOC,GAAR,OAC7B,EAAKC,KAAKG,2BAA2BL,EAAOC,IAbhC,KAedK,UAAY,kBAAM,EAAKJ,KAAKK,WAfd,KAiBdC,gBAAkB,SAAAR,GAAK,OAAI,EAAKE,KAAKO,uBAAuBT,IAjB9C,KAmBdU,iBAAmB,SAAAT,GAAQ,OACzB,EAAKC,KAAKS,YAAYC,eAAeX,IApBzB,KAwBdY,KAAO,SAAAC,GAAG,OAAI,EAAKC,GAAGC,IAAR,gBAAqBF,KAxBrB,KA0BdG,MAAQ,kBAAM,EAAKF,GAAGC,IAAI,UAzBxBE,IAAIC,cAAc9B,GAElB+B,KAAKlB,KAAOgB,IAAIhB,OAChBkB,KAAKL,GAAKG,IAAIG,WACdD,KAAKE,UAAYJ,IAAII,Y,mGA4BHC,EAAUvB,G,gFACtBwB,EAAO,IAAIC,KAEXC,EAAO,CACXC,MAAO3B,EACP4B,SAAUL,EACVM,UAAWL,G,SAGPJ,KAAKE,UAAUQ,WAAW,QAAQC,IAAI/B,GAAOgC,IAAIN,G,oLAOvC1B,G,uFACMoB,KAAKE,UAAUQ,WAAW,QAAQC,IAAI/B,GAAOiC,M,cAA7DC,E,yBAECA,EAAQR,Q,iLAOAH,G,uFACOH,KAAKE,UAAUQ,WAAW,QAAQK,MAAM,WAAY,KAAMZ,GAAUU,M,cAApFC,E,yBAECA,EAAQE,KAAKC,KAAI,SAAAN,GAAG,OAAIA,EAAIL,W,iLASpBY,EAAOC,EAAMhB,G,8EAItBG,EAAO,CACXE,SAAUL,EACViB,MAAOF,EACPG,KAAMF,G,SAGFnB,KAAKE,UAAUQ,WAAW,QAAQY,IAAIhB,G,uBACtCN,KAAKE,UAAUQ,WAAW,SAASY,IAAI,CAC3CC,MAAO,EACPH,MAAOF,I,iLAUEA,EAAOM,EAAO5C,G,2FACDoB,KAAKyB,MAAM,QAASP,EAAO,S,cAA7CQ,E,OACAC,EAASD,EAAU,GAErBE,EAAQJ,EACZI,GAAgB,EAEhBC,QAAQC,IAAIF,G,SAES5B,KAAKE,UAAUQ,WAAW,SAASC,IAAIgB,GAAQI,OAAO,CAACR,MAAOK,I,+BAC7D5B,KAAKE,UAAUQ,WAAW,QAAQC,IAAI/B,GAAO8B,WAAW,QAAQC,IAAIO,GAAON,IAAI,CAACoB,SAAS,I,mMASlGd,EAAOM,EAAO5C,G,2FACHoB,KAAKyB,MAAM,QAASP,EAAO,S,cAA7CQ,E,OACAC,EAASD,EAAU,GAErBE,EAAQJ,GAEE,KADdI,GAAgB,KACCA,EAAQ,G,SAEJ5B,KAAKE,UAAUQ,WAAW,SAASC,IAAIgB,GAAQI,OAAO,CAACR,MAAOK,I,+BAC7D5B,KAAKE,UAAUQ,WAAW,QAAQC,IAAI/B,GAAO8B,WAAW,QAAQC,IAAIO,GAAOe,S,qMAOlFf,G,qGAESlB,KAAKyB,MAAM,OAAQP,EAAO,S,cAA5CgB,E,gBACkBlC,KAAKyB,MAAM,QAASP,EAAO,S,cAA7CQ,E,gBACqB1B,KAAKyB,MAAM,WAAYP,EAAO,Q,cAAnDiB,E,OAGAC,EAAKF,EAAU,GACfP,EAASD,EAAU,G,UAGA1B,KAAKE,UAAUQ,WAAW,QAAQC,IAAIyB,GAAIH,S,gCAC1CjC,KAAKE,UAAUQ,WAAW,SAASC,IAAIgB,GAAQM,S,kBACpD,OAAjBE,QAA0CE,IAAjBF,E,+BACJA,G,kEAAXG,E,kBACmBtC,KAAKE,UAAUQ,WAAW,YAAYC,IAAI2B,GAASL,S,0VAapEM,EAAUrB,EAAOC,EAAMhB,G,4FAGhCG,EAAO,CACXE,SAAUL,EACViB,MAAOF,EACPG,KAAMF,G,SAGenB,KAAKwC,UAAUD,G,cAAhCE,E,gBAGkBzC,KAAKyB,MAAM,OAAQc,EAAU,S,cAA/CL,E,gBACkBlC,KAAKyB,MAAM,QAASc,EAAU,S,cAAhDb,E,iBACqB1B,KAAKyB,MAAM,WAAYc,EAAU,Q,eAAtDJ,E,OAGAC,EAAKF,EAAU,GACfP,EAASD,EAAU,GACnBgB,EAAYP,EAAa,G,UAGNnC,KAAKE,UAAUQ,WAAW,QAAQC,IAAIyB,GAAIxB,IAAIN,G,gCAC9CN,KAAKE,UAAUQ,WAAW,SAASC,IAAIgB,GAAQI,OAAO,CAC7EX,MAAOF,I,gCAEmBlB,KAAKE,UAAUQ,WAAW,YAAYC,IAAI+B,GAAWX,OAAO,CACtFY,KAAMzB,I,sBAIRZ,EAAKiB,MAAQkB,EAAS,GAAGlB,M,kBAElBjB,G,mLASGI,EAAYkC,EAAWC,G,uFACZ7C,KAAKE,UAAUQ,WAAWA,GAAYK,MAAM8B,EAAQ,KAAMD,GAAW/B,M,cAApFiC,E,yBAECA,EAAO9B,KAAKC,KAAI,SAAAN,GAAG,OAAIA,EAAIyB,O,sLAWlBlB,EAAOoB,EAASS,G,8EAG1BzC,EAAO,CACXqC,KAAMzB,EACN8B,QAASV,EACTW,KAAMF,G,SAGiB/C,KAAKE,UAAUQ,WAAW,YAAYY,IAAIhB,G,sMAQjD4C,EAAYZ,G,yFACHtC,KAAKyB,MAAM,WAAYyB,EAAY,W,cAAxDf,E,OACAO,EAAYP,EAAa,G,SAEHnC,KAAKE,UAAUQ,WAAW,YAAYC,IAAI+B,GAAWX,OAAO,CACtFiB,QAASV,I,oMAUOA,EAASnC,G,yFACDH,KAAKE,UAAUQ,WAAW,YAAYK,MAAM,UAAW,KAAMuB,GAASvB,MAAM,OAAQ,KAAMZ,GAAUU,M,cAAxHsC,E,OACAC,EAAQD,EAAYnC,KAAKC,KAAI,SAAAN,GAAG,OAAIA,EAAIyB,M,SAElBpC,KAAKE,UAAUQ,WAAW,YAAYC,IAAIyC,EAAM,IAAInB,S,2RAIzDjC,KAAKE,UAAUQ,WAAW,QAAQG,M,cAAnDwC,E,OACFC,EAAY,GAChBD,EAASE,QAAT,uCAAiB,WAAOC,GAAP,SAAAC,EAAA,sDACfH,EAAUI,KAAKF,EAAKlD,QADL,2CAAjB,uD,kBAIOgD,G,kLAGUpC,G,yFACSlB,KAAKE,UAAUQ,WAAW,YAAYK,MAAM,OAAQ,KAAMG,GAAOL,M,cAArF8C,E,OAEAC,EAAMD,EAAY3C,KAAKC,KAAI,SAAAN,GAAG,OAAIA,EAAIL,U,kBACrCsD,G,gLAGO1C,G,uFACYlB,KAAKE,UAAUQ,WAAW,SAASK,MAAM,QAAS,KAAMG,GAAOL,M,cAAnF8C,E,yBAECA,EAAY3C,KAAKC,KAAI,SAAAN,GAAG,OAAIA,EAAIL,W,uLAGlBY,G,yFACUlB,KAAKE,UAAUQ,WAAW,YAAYK,MAAM,OAAQ,KAAMG,GAAOL,M,cAA1FgD,E,OAEAD,EAAMC,EAAiB7C,KAAKC,KAAI,SAAAN,GAAG,OAAIA,EAAIL,U,kBAC1CsD,EAAIE,Q,wLAGWlF,G,0EACT,OAAVA,E,yCAAuB,M,uBACCoB,KAAKE,UAAUQ,WAAW,QAAQC,IAAI/B,GAAO8B,WAAW,QAAQG,M,cAArFkD,E,yBACCA,EAAa/C,KAAKC,KAAI,SAAAN,GAAG,OAAIA,EAAIyB,O,sLAGpBjC,G,4EACJ,OAAbA,E,yCAA0B,M,uBAECH,KAAKE,UAAUQ,WAAW,YAAYK,MAAM,OAAQ,KAAMZ,GAAUU,M,cAA5FmD,E,OACAC,EAAUD,EAAgBhD,KAAKC,KAAI,SAAAN,GAAG,OAAIA,EAAIyB,M,kBAE7C6B,EAAQH,Q,mLAGE3D,G,0EACD,OAAbA,E,yCAA0B,M,uBACAH,KAAKE,UAAUQ,WAAW,QAAQK,MAAM,WAAY,KAAMZ,GAAUU,M,cAAzFqD,E,yBAECA,EAAalD,KAAKC,KAAI,SAAAN,GAAG,OAAIA,EAAIL,W,8GEzO/B6D,MAjFf,SAAiBrG,GAAQ,IAAD,EACQsG,mBAAStG,EAAMuG,SAASC,MAAMC,QADtC,mBACbC,EADa,aAEcJ,mBAAS,CAAC3D,UAAW,MAFnC,mBAEbgE,EAFa,KAEFC,EAFE,OAGMN,mBAAS,CAACO,MAAO,IAHvB,mBAGbC,EAHa,KAGNC,EAHM,OAIYT,mBAAS,CAACU,SAAU,IAJhC,mBAIbC,EAJa,KAIHC,EAJG,OAKIZ,mBAAS,CAACzB,KAAM,KALpB,mBAKba,EALa,KAKPyB,EALO,KAMdjH,EAAWkH,qBAAWzH,GAEtB0H,EAAgB,SAACC,GACnBvD,QAAQC,IAAIsD,GACZ,IAAMC,EAAS,IAAIhF,KAAK,GAExB,OADAgF,EAAOC,cAAcF,EAAK,GAAG3E,UAAU8E,SAChCF,EAAOG,YAsClB,OAnCAC,qBAAU,WACazH,EAAS0H,WAAWlB,GAC5BmB,MAAK,SAAAP,GACZvD,QAAQC,IAAIsD,GACZV,EAAa,CAACjE,UAAW0E,EAAcC,KACjBpH,EAAS4H,kBAAkBR,EAAK,GAAG7E,OAC3CoF,MAAK,SAAAE,GACfhB,EAAS,CAACF,MAAOkB,EAAM/B,eAIP9F,EAASgG,gBAAgBQ,GACjCmB,MAAK,SAAAG,GACjBd,EAAY,CAACF,SAAUgB,OAGN9H,EAASkG,aAAaM,GAC9BmB,MAAK,SAAAnC,GACdyB,EAAQ,CAACtC,KAAMa,EAAKM,cAEzB,IAgBC,kBAACiC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,KAAN,KACI,kBAACD,EAAA,EAAKlF,MAAN,qBACA,kBAACkF,EAAA,EAAKE,KAAN,KACI,yCADJ,IAC4BhC,EACxB,6BACA,6BACA,uDAJJ,IAI0CC,EAAUhE,UAChD,6BACA,6BACA,sDAPJ,IAOyCmE,EAAMD,MAC3C,6BACA,6BACA,0CAVJ,KAU4CC,EAAMD,MA5B9C,EADVC,EAAMD,MAIc,EADlBI,EAASD,SAIG,EADdtB,EAAKb,MAwBK,6BACA,6BACA,kDAbJ,IAaqCa,EAAKb,Y,gDCpEvD,SAAS8D,EAAO3I,GAAQ,IAAD,EACRsG,mBAAS,CAACsC,OAAO,IADT,mBAC3BC,EAD2B,KACpBC,EADoB,OAERxC,mBAAS,CAACyC,MAAO,KAFT,mBAEpBC,GAFoB,WAG5B9I,EAAWkH,qBAAWzH,GACtBsJ,EAAWC,aAAaC,QAAQ,SAEtCxB,qBAAU,WACU,OAAbsB,GAG0B/I,EAAS4H,kBAAkBmB,GACnCpB,MAAK,SAAAuB,GAClBJ,EAAS,CAACD,MAAOK,IACdA,EAAOC,SAASrJ,EAAMoD,QACrB0F,EAAS,CAACF,OAAO,SAI9B,IAEH,IAAMU,EAAU,WACI,OAAbL,IAGIJ,EAAMD,OACLE,EAAS,CAACF,OAAO,IACjB1I,EAASqJ,SAASvJ,EAAMoD,MAAOpD,EAAM+H,MAAMtE,MAAOwF,KAElDH,EAAS,CAACF,OAAO,IACjB1I,EAASsJ,OAAOxJ,EAAMoD,MAAOpD,EAAM+H,MAAMtE,MAAOwF,MAK5D,OAAIJ,EAAMD,MAQF,yBAAKa,UAAU,eAAeC,QAAS,kBAAMJ,MACzC,kBAAC,IAAD,CAAiBK,KAAMC,OAP3B,yBAAKH,UAAU,aAAaC,QAAS,kBAAMJ,MACvC,kBAAC,IAAD,CAAiBK,KAAME,OCtCxB,SAASC,EAAS9J,GAC7B,IAAM+J,EAAUC,cADoB,EAEV1D,mBAAS,CAAC2D,MAAO,CAACxG,MAAO,KAFf,mBAE7BsE,EAF6B,KAEtBmC,EAFsB,OAGI5D,mBAAS,CAACU,SAAU,IAHxB,mBAG7BmD,EAH6B,KAGfC,EAHe,KAMpCrG,QAAQC,IAAI+D,EAAMkC,MAAMxG,OACxBkE,qBAAU,WACW3H,EAAME,SAASwE,UAAU1E,EAAMoD,OACvCyE,MAAK,SAAAnE,GACVK,QAAQC,IAAIN,GACQ,IAAjBA,EAAMsC,SACLjC,QAAQC,IAAI,QACZD,QAAQC,IAAIN,EAAM,IAClBwG,EAAS,CAACD,MAAOvG,EAAM,SAIR1D,EAAME,SAAS6F,iBAAiB/F,EAAMoD,OAC9CyE,MAAK,SAAAwC,GAChBD,EAAgB,CAACpD,SAAUqD,SAGhC,IAuBH,OACI,yBAAKZ,UAAU,qBACX,uBAAGA,UAAU,gBAAgBzJ,EAAMsK,OAAnC,KACA,kBAAC,EAAD,CAAQlH,MAAOpD,EAAMoD,MAAO2E,MAAOA,EAAMkC,QACzC,yBAAKR,UAAU,eACX,yBAAKA,UAAU,oBACX,uBAAGc,KAAMvK,EAAMqD,MAAOrD,EAAMoD,QAGhC,yBAAKqG,UAAU,2BACX,2BAAI1B,EAAMkC,MAAMxG,MAAhB,aACI,0BAAMgG,UAAU,mBACZC,QAAS,WApB7BK,EAAQnE,KAAK,CACT4E,SAAS,YAAD,OAAcxK,EAAM0G,QAC5BF,MAAO,CACHC,OAAQzG,EAAM0G,YAiByB,IAAM1G,EAAM0G,SAG/C,0BAAM+D,MAAO,CAACC,YAAa,cAAeC,WAAY,gBAAtD,KACA,2BAAIR,EAAanD,SAAjB,aACA,0BAAMyD,MAAO,CAACC,YAAa,cAAeC,WAAY,gBAAtD,KACA,uBAAGjB,QAAS,WAtCxBK,EAAQnE,KAAK,CACT4E,SAAS,YAAD,OAAcxK,EAAMoD,OAC5BoD,MAAO,CACHlD,MAAOtD,EAAMoD,MACb6G,MAAOlC,EAAMkC,MACbxD,OAAQzG,EAAM0G,OACdnD,KAAMvD,EAAMqD,SAgCqBoG,UAAU,gBAAvC,c,WChEdmB,E,kDAEF,WAAY5K,GAAQ,IAAD,8BACf,cAAMA,IAEDwG,MAAQ,CACTuC,MAAO,IAJI,E,gEAQE,IAAD,OAChB8B,YAAW,WACU,EAAK7K,MAAME,SAAS4K,YAC5BjD,MAAK,SAAAkD,GACV,EAAKC,SAAS,CAACjC,MAAOgC,SAE3B,O,+BAGG,IAAD,OACL,OACI,yBAAKtB,UAAU,eACX,yBAAKA,UAAU,kBACVvH,KAAKsE,MAAMuC,MAAM5F,KAAI,SAACuC,EAAMuF,GAEzB,OADAlH,QAAQC,IAAI0B,GAER,kBAAC,EAAD,CAAUtC,MAAOsC,EAAKpC,MAAOoD,OAAQhB,EAAKhD,SAAUW,KAAMqC,EAAKnC,KAAMrD,SAAU,EAAKF,MAAME,SAAUoK,OAAQW,EAAM,a,GA1B3HrL,IAAMG,WAmCV,SAASmL,EAAalL,GACjC,IAAM8D,EAAQsD,qBAAWzH,GAEzB,OAAO,kBAAC,EAAD,CAAMO,SAAU4D,EAAO9D,MAAOA,I,wDCvC1BmL,EAFSvL,IAAMC,cAAc,MCuC7BuL,EApCY,SAACrL,GAAe,IACnCsL,EADkC,kDAEtC,WAAYrL,GAAQ,IAAD,8BACjB,cAAMA,IAEDwG,MAAQ,CACX8E,SAAU,MAJK,EAFmB,gEAUjB,IAAD,OAClBpJ,KAAKqJ,SAAWrJ,KAAKlC,MAAME,SAASc,KAAKwK,oBACvC,SAACF,GACCA,EACI,EAAKN,SAAS,CAAEM,aAChB,EAAKN,SAAS,CAAEM,SAAU,YAfE,6CAqBpCpJ,KAAKqJ,aArB+B,+BAyBpC,OACE,kBAAC,EAAgBE,SAAjB,CAA0B3H,MAAO5B,KAAKsE,MAAM8E,UAC1C,kBAACvL,EAAcmC,KAAKlC,YA3BY,GACPJ,IAAMG,WAgCvC,OAAOD,EAAauL,I,QCDPK,EA9BO,SAACC,EAAWC,GAAZ,OAAsB,SAAC7L,GAAe,IACpD2L,EADmD,kLAElC,IAAD,OAClBxJ,KAAKqJ,SAAWrJ,KAAKlC,MAAME,SAASc,KAAKwK,oBACvC,SAACF,GACMK,EAAUL,IACb,EAAKtL,MAAM+J,QAAQnE,KAAKgG,QANuB,6CAarD1J,KAAKqJ,aAbgD,+BAgB7C,IAAD,OACP,OACE,kBAAC,EAAgBtL,SAAjB,MACG,SAAAqL,GAAQ,OACPK,EAAUL,GAAY,kBAACvL,EAAc,EAAKC,OAAY,YApBP,GAC7BJ,IAAMG,WA0BlC,OAAO8L,YAAQC,IAAYhM,EAApB+L,CAAkCH,KC3B5B,SAASK,EAAY/L,GAChC,IAAME,EAAWkH,qBAAWzH,GADW,EAEH2G,mBAAS,CAACpB,QAAS,KAFhB,mBAEhC8G,EAFgC,KAEpBC,EAFoB,OAGf3F,oBAAS,GAHM,mBAGhC4F,EAHgC,KAG1BC,EAH0B,KAInC3H,EAAUxE,EAAMwE,QAEd4H,EAAU,WACZ,OACI,kBAACC,EAAA,EAAD,sBAMFC,EAAc,WAChB,GAAGJ,EACCC,GAASD,OACN,CACmBhM,EAASqM,cAAc/H,EAAQU,QAAS8G,EAAW9G,SACzE2F,YAAW,WACPsB,GAASD,GACTM,OAAOjG,SAASkG,WACjB,OAKX,OAAGP,EAEK,6BACI,uBAAGzC,UAAU,aAAajF,EAAQU,SACjCgE,aAAaC,QAAQ,cAAgB3E,EAAQW,KAC9C,kBAACuH,EAAA,EAAD,CAAgBC,UAAU,QAAQC,QAASR,IAAWS,MAAO,CAAEX,KAAM,IAAKY,KAAM,MAC5E,yBAAKrD,UAAU,eACXC,QAAS,SAACqD,GAAD,OAAOT,MAChB,kBAAC,IAAD,CAAiB3C,KAAMqD,QAEX,MAKxB,6BACI,kBAACC,EAAA,EAAD,KACI,kBAACA,EAAA,EAAKC,QAAN,CAAcC,aAAc3I,EAAQU,QAASkI,SAAU,SAACL,GAAD,OAAOd,EAAc,CAAC/G,QAAS6H,EAAEM,OAAOvJ,YAElGoF,aAAaC,QAAQ,cAAgB3E,EAAQW,KAC1C,kBAACuH,EAAA,EAAD,CAAgBC,UAAU,QAAQC,QAASR,IAAWS,MAAO,CAAEX,KAAM,IAAKY,KAAM,MAC5E,yBAAKrD,UAAU,eACXC,QAAS,SAACqD,GAAD,OAAOT,MAChB,kBAAC,IAAD,CAAiB3C,KAAMqD,QAEX,MC1DjC,IAAMM,EACA,iBADAA,EAED,gBAFCA,EAGF,SAHEA,EAID,UAJCA,EAKQ,mBALRA,EAMH,IANGA,EAOA,kBCGPpI,E,kDAEF,WAAYlF,GAAQ,IAAD,6BACf,cAAMA,GAEN+D,QAAQC,IAAIhE,EAAMuN,KAAKhH,SAASC,OAEhC,EAAKA,MAAQ,CACTC,OAAQzG,EAAMuN,KAAKhH,SAASC,MAAMC,OAClCwD,MAAOjK,EAAMuN,KAAKhH,SAASC,MAAMyD,MACjC3G,MAAOtD,EAAMuN,KAAKhH,SAASC,MAAMlD,MACjCC,KAAMvD,EAAMuN,KAAKhH,SAASC,MAAMjD,KAChCiK,aAAc,EACdxG,SAAU,GACV0B,KAAM,GACN+E,SAAU,GACVC,aAAa,GAGjB,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,OAAS,EAAKA,OAAOD,KAAZ,gBACd,EAAKE,UAAY,EAAKA,UAAUF,KAAf,gBACjB,EAAKG,WAAa,EAAKA,WAAWH,KAAhB,gBAClB,EAAKI,cAAgB,EAAKA,cAAcJ,KAAnB,gBACrB,EAAKK,YAAc,EAAKA,YAAYL,KAAjB,gBACnB,EAAKM,SAAW,EAAKA,SAASN,KAAd,gBAvBD,E,gEA0BE,IAAD,OACO1L,KAAKlC,MAAME,SAAS6F,iBAAiB7D,KAAKsE,MAAMlD,OACxDuE,MAAK,SAAAwC,GAChB,EAAKW,SAAS,CAACwC,aAAcnD,OAGZnI,KAAKlC,MAAME,SAASiO,aAAajM,KAAKsE,MAAMlD,OACpDuE,MAAK,SAAAZ,GACdlD,QAAQC,IAAIiD,GACZ,EAAK+D,SAAS,CAAChE,SAAUC,S,oCAK7B,IAAMmH,EAAOlM,KAAKsE,MAAMkC,KAClBrG,EAAW6G,aAAaC,QAAQ,YACnBjH,KAAKlC,MAAME,SAASmO,YAAYnM,KAAKsE,MAAMlD,MAAO8K,EAAM/L,GAC3EH,KAAK8I,SAAS,CAACtC,KAAM,KAErBxG,KAAKoM,sB,6BAGF9J,EAASS,GACU/C,KAAKlC,MAAME,SAASqO,cAAc/J,EAASS,GACjE4F,YAAW,WACP2B,OAAOjG,SAASkG,WACjB,O,kCAGM,IAAD,OACR,GAAGvK,KAAKsE,MAAMkH,YAAa,CACvB,GAA2B,KAAxBxL,KAAKsE,MAAMiH,SAAiB,OAC/B1J,QAAQC,IAAI,QACQ9B,KAAKlC,MAAME,SAASsO,WAAWtM,KAAKsE,MAAMlD,MAAOpB,KAAKsE,MAAMiH,SAAUvL,KAAKsE,MAAMjD,KAAMrB,KAAKsE,MAAMC,QAC1GoB,MAAK,SAAArF,GACbuB,QAAQC,IAAIxB,GACZ,EAAKwI,SAAS,CACVvE,OAAQjE,EAAKE,SACbuH,MAAOzH,EAAKiB,MACZH,MAAOd,EAAKc,MACZC,KAAMf,EAAKe,UAGnBrB,KAAK8I,SAAS,CAAC0C,aAAa,EAAOD,SAAU,UAE7CvL,KAAK8I,SAAS,CAAC0C,aAAa,M,mCAKhCxL,KAAKlC,MAAME,SAASuO,WAAWvM,KAAKsE,MAAMlD,OAC1CS,QAAQC,IAAI9B,KAAKlC,OACjBkC,KAAKlC,MAAMuN,KAAKxD,QAAQnE,KAAK,O,oCAGnB8I,GACV,OACI,kBAACrC,EAAA,EAAD,eACYqC,K,kCAKRA,GACR,OACI,kBAACrC,EAAA,EAAD,aACUqC,K,iCAMdxM,KAAKlC,MAAMuN,KAAKxD,QAAQnE,KAAK,CACzB4E,SAAS,YAAD,OAActI,KAAKsE,MAAMC,QACjCD,MAAO,CACHC,OAAQvE,KAAKsE,MAAMC,Y,+BAKrB,IAAD,OACL,OACI,yBAAKgD,UAAU,kBACX,yBAAKA,UAAU,sBACX,kBAACxB,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,yBAAKkB,UAAU,oBACX,yBAAKA,UAAU,oBACX,uBAAGA,UAAU,cAAa,gCAAQ,uBAAGc,KAAMrI,KAAKsE,MAAMjD,MAAOrB,KAAKsE,MAAMlD,SACvE4F,aAAaC,QAAQ,aAAejH,KAAKsE,MAAMC,OAChD,kBAACiG,EAAA,EAAD,CAAgBC,UAAU,QAAQC,QAAS1K,KAAK+L,YAAY,SAAUpB,MAAO,CAAEX,KAAM,IAAKY,KAAM,MAC5F,yBAAKrD,UAAU,aAAaC,QAAS,kBAAM,EAAKoE,cAC5C,kBAAC,IAAD,CAAiBnE,KAAMqD,QAEX,MAGvB9D,aAAaC,QAAQ,aAAejH,KAAKsE,MAAMC,OAC5C,kBAACiG,EAAA,EAAD,CAAgBC,UAAU,QAAQC,QAAS1K,KAAK8L,cAAc,QAASnB,MAAO,CAAEX,KAAM,IAAKY,KAAM,MAC7F,yBAAKrD,UAAU,cAAcC,QAAS,kBAAM,EAAKqE,eAC7C,kBAAC,IAAD,CAAiBpE,KAAMgF,QAEX,KAExB,uBAAGlF,UAAU,aAAY,kBAAC,EAAD,CAAQrG,MAAOlB,KAAKsE,MAAMlD,MAAOyE,MAAO7F,KAAKsE,MAAMyD,QAC3E,IAAK/H,KAAKsE,MAAMyD,MAAMxG,MADvB,aAEI,yBAAKiG,QAAS,kBAAM,EAAKwE,YAAYzE,UAAU,eAC1CvH,KAAKsE,MAAMC,QAHpB,MAIcvE,KAAKsE,MAAMgH,aAJzB,eAMHtL,KAAKsE,MAAMkH,YACR,kBAACvF,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,kBAAC0E,EAAA,EAAK2B,MAAN,CAAYC,UAAU,gCAClB,kBAAC5B,EAAA,EAAKC,QAAN,CACI4B,KAAK,OACL1B,SAAU,SAACL,GAAD,OAAO,EAAK/B,SAAS,CAACyC,SAAUV,EAAEM,OAAOvJ,SACnDA,MAAO5B,KAAKsE,MAAMiH,SAClBsB,YAAY,+BAInB,OAIpB7F,aAAaC,QAAQ,YACtB,kBAAChB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,kBAAC0E,EAAA,EAAK2B,MAAN,CAAYC,UAAU,gCAClB,kBAAC5B,EAAA,EAAKC,QAAN,CAAc8B,GAAG,WAAWC,KAAK,IAC7BH,KAAK,OACL1B,SAAU,SAACL,GAAD,OAAO,EAAK/B,SAAS,CAACtC,KAAMqE,EAAEM,OAAOvJ,SAC/CA,MAAO5B,KAAKsE,MAAMkC,KAClBqG,YAAY,6BAInB,KAET,kBAAC5G,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,kBAAC2G,EAAA,EAAD,CAAQxF,QAAS,kBAAM,EAAKiE,gBAA5B,aAOZ,yBAAKlE,UAAU,eACX,yBAAKA,UAAU,qBACVvH,KAAKsE,MAAMQ,SAAS7D,KAAI,SAAAqB,GACrB,GAAe,OAAZA,EACH,OACI,yBAAKiF,UAAU,eAAe0F,IAAK3K,EAAQU,SACvC,4BAAKV,EAAQW,MACb,kBAAC4G,EAAD,CAAavH,QAASA,IACrB0E,aAAaC,QAAQ,cAAgB3E,EAAQW,KAC9C,kBAACuH,EAAA,EAAD,CAAgBC,UAAU,QAAQC,QAAS,EAAKoB,cAAc,WAAYnB,MAAO,CAAEX,KAAM,IAAKY,KAAM,MAChG,yBAAKrD,UAAU,iBACXC,QAAS,kBAAM,EAAKmE,OAAOrJ,EAAQU,QAASV,EAAQW,QACpD,kBAAC,IAAD,CAAiBwE,KAAMgF,QAEX,iB,GAhMtC/O,IAAMG,WAqNb2L,UATG,SAAAJ,GAAQ,QAAMA,IAClBgC,EAQC5B,EANf,SAAyB1L,GACrB,IAAM8D,EAAQsD,qBAAWzH,GAEzB,OAAO,kBAAC,EAAD,CAASO,SAAU4D,EAAOyJ,KAAMvN,OCrJ3C,IAEe0L,MAFG,SAAAJ,GAAQ,QAAMA,IAEjBI,EApEf,WAAwB,IAAD,EACGpF,mBAAS,IADZ,mBACZ8I,EADY,KACPC,EADO,OAEO/I,mBAAS,IAFhB,mBAEZlD,EAFY,KAELkM,EAFK,OAGuBhJ,oBAAS,GAHhC,mBAGZiJ,EAHY,KAGGC,EAHH,OAI2BlJ,oBAAS,GAJpC,mBAIZmJ,EAJY,KAIKC,EAJL,KAKbxP,EAAWkH,qBAAWzH,GACtBoK,EAAUC,cAWV2F,EAAS,WAC2BD,EALZ,KAAVtM,GAJTgM,EAAI/F,SAAS,QAUuCmG,GAAiB,GAA1CA,GAAiB,GAEnD,GAAGpM,GAASgM,EAAK,CACb,IAAM/M,EAAW6G,aAAaC,QAAQ,YACnBjJ,EAAS0P,WAAWxM,EAAOgM,EAAK/M,GACnD0H,EAAQnE,KAAK,OAIrB,OACI,kBAACqC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,kBAAC0E,EAAA,EAAD,KACI,kBAACA,EAAA,EAAK2B,MAAN,CAAYC,UAAU,kBAClB,kBAAC5B,EAAA,EAAK4C,MAAN,cACA,kBAAC5C,EAAA,EAAKC,QAAN,CAAc4B,KAAK,OAAOC,YAAY,cAClC3B,SAAU,SAACL,GAAD,OAAOuC,EAASvC,EAAEM,OAAOvJ,QACnCgM,UAAWL,IAEf,kBAACxC,EAAA,EAAKC,QAAQ6C,SAAd,CAAuBjB,KAAK,WAA5B,+BAIJ,kBAAC7B,EAAA,EAAK2B,MAAN,CAAYC,UAAU,qBAClB,kBAAC5B,EAAA,EAAK4C,MAAN,YACA,kBAAC5C,EAAA,EAAKC,QAAN,CAAc4B,KAAK,OAAOC,YAAY,kBACtC3B,SAAU,SAACL,GAAD,OAAOsC,EAAOtC,EAAEM,OAAOvJ,QACjCgM,UAAWP,IAEX,kBAACtC,EAAA,EAAKC,QAAQ6C,SAAd,CAAuBjB,KAAK,WAA5B,gCAQhB,kBAAC3G,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IACxB,kBAAC2G,EAAA,EAAD,CAAQxF,QAAS,kBAAMiG,MAAvB,qB,kBCpDdK,GAAgB,CACpBlP,MAAO,GACPmP,MAAO,MAGHC,G,kDACJ,WAAYlQ,GAAQ,IAAD,8BACjB,cAAMA,IAKRmQ,SAAW,SAACC,GAAW,IACbtP,EAAU,EAAK0F,MAAf1F,MAER,EAAKd,MAAME,SACRoB,gBAAgBR,GAChB+G,MAAK,WACJ,EAAKmD,SAAL,gBAAmBgF,QAEpBK,OAAM,SAACJ,GACN,EAAKjF,SAAS,CAAEiF,aAGpBG,EAAME,kBAlBW,EAqBnBlD,SAAW,SAACgD,GACV,EAAKpF,SAAL,gBAAiBoF,EAAM/C,OAAOpI,KAAOmL,EAAM/C,OAAOvJ,SAnBlD,EAAK0C,MAAL,gBAAkBwJ,IAHD,E,qDAyBT,IAAD,EACkB9N,KAAKsE,MAAtB1F,EADD,EACCA,MAAOmP,EADR,EACQA,MACTH,EAAsB,KAAVhP,EAElB,OACE,0BAAMqP,SAAUjO,KAAKiO,UACnB,2BACElL,KAAK,QACLnB,MAAO5B,KAAKsE,MAAM1F,MAClBsM,SAAUlL,KAAKkL,SACf0B,KAAK,OACLC,YAAY,kBAEd,4BAAQwB,SAAUT,EAAWhB,KAAK,UAAlC,qBAICmB,GAAS,2BAAIA,EAAMO,c,GA3CSzQ,aAiD/B0Q,GAAqB,kBACzB,2BACE,kBAAC,IAAD,CAAMC,GAAIpD,GAAV,sBAIWqD,GAnEY,kBACzB,6BACE,+CACA,kBAACC,GAAD,QAkEEA,GAAqB9Q,EAAaoQ,ICpElCW,G,uKAED,OACG,6BACA,sCACA,kBAACC,GAAD,W,GALiB/Q,aAWnBiQ,GAAgB,CAClB3N,SAAU,GACVvB,MAAO,GACPiQ,YAAa,GACbC,YAAa,GACbf,MAAO,MAGLgB,G,kDACF,WAAYjR,GAAO,IAAD,8BACd,cAAMA,IAKVmQ,SAAW,SAAAC,GAAU,IAAD,EACyB,EAAK5J,MAAtCnE,EADQ,EACRA,SAAUvB,EADF,EACEA,MAAOiQ,EADT,EACSA,YAEzB,EAAK/Q,MAAME,SACNW,iCAAiCC,EAAOiQ,GACxClJ,MAAK,SAAAyD,GACF,OAAO,EAAKtL,MAAME,SACfyB,KAAK2J,EAAS3J,KAAKC,KACnBkB,IAAI,CACHT,WACAvB,aAGP+G,MAAK,WACF,EAAKmD,SAAL,gBAAmBgF,KACnB,EAAKhQ,MAAME,SAASgR,cAAc7O,EAAUvB,GAC5CoI,aAAaiI,QAAQ,QAASrQ,GAC9BoI,aAAaiI,QAAQ,WAAY9O,GACjC,EAAKrC,MAAM+J,QAAQnE,KAAK0H,MAE3B+C,OAAM,SAAAJ,GACH,EAAKjF,SAAS,CAAEiF,aAExBG,EAAME,kBA7BQ,EAgClBlD,SAAW,SAAAgD,GACP,EAAKpF,SAAL,gBAAgBoF,EAAM/C,OAAOpI,KAAOmL,EAAM/C,OAAOvJ,SA9BjD,EAAK0C,MAAL,gBAAkBwJ,IAHJ,E,qDAoCT,IAAD,EAOA9N,KAAKsE,MALLnE,EAFA,EAEAA,SACAvB,EAHA,EAGAA,MACAiQ,EAJA,EAIAA,YACAC,EALA,EAKAA,YACAf,EANA,EAMAA,MAGEH,EACNiB,IAAgBC,GACA,KAAhBD,GACU,KAAVjQ,GACa,KAAbuB,EAEA,OACI,0BAAM8N,SAAUjO,KAAKiO,UACjB,mDACA,2BACIlL,KAAM,WACNnB,MAAQzB,EACR+K,SAAWlL,KAAKkL,SAChB0B,KAAM,OACNC,YAAa,mBAEjB,gDACA,2BACI9J,KAAM,QACNnB,MAAQhD,EACRsM,SAAWlL,KAAKkL,SAChB0B,KAAM,QACNC,YAAa,kBAEjB,6BACA,8CACA,2BACI9J,KAAM,cACNnB,MAAQiN,EACR3D,SAAWlL,KAAKkL,SAChB0B,KAAM,WACNC,YAAa,aAEjB,gDACA,2BACI9J,KAAM,cACNnB,MAAQkN,EACR5D,SAAWlL,KAAKkL,SAChB0B,KAAM,WACNC,YAAa,qBAEjB,4BAAQwB,SAAUT,EAAWhB,KAAK,UAAlC,WACCmB,GAAS,2BAAIA,EAAMO,c,GAxFPzQ,aA8FvBqR,GAAa,kBACf,oDAC0B,kBAAC,IAAD,CAAMV,GAAIpD,GAAV,aAIxBwD,GAAajF,YACfC,IACAhM,EAFe+L,CAGjBoF,IAEaJ,MCzHTQ,G,uKAEF,OACE,6BACE,sCACA,kBAACC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,W,GAPcvR,aAahBiQ,GAAgB,CACpBlP,MAAO,GACPC,SAAU,GACVkP,MAAO,MAGHsB,G,kDACJ,WAAYvR,GAAQ,IAAD,8BACjB,cAAMA,IAKRmQ,SAAW,SAACC,GAAW,IAAD,EACQ,EAAK5J,MAAzB1F,EADY,EACZA,MAAOC,EADK,EACLA,SAEf,EAAKf,MAAME,SACRgB,6BAA6BJ,EAAOC,GACpC8G,MAAK,WACJqB,aAAaiI,QAAQ,QAASrQ,GACX,EAAKd,MAAME,SAASsR,YAAY1Q,GACxC+G,MAAK,SAAA7E,GACde,QAAQC,IAAIhB,GACZkG,aAAaiI,QAAQ,WAAYnO,EAAQN,aAE3C,EAAKsI,SAAL,gBAAmBgF,KACnB,EAAKhQ,MAAM+J,QAAQnE,KAAK0H,MAEzB+C,OAAM,SAACJ,GACN,EAAKjF,SAAS,CAAEiF,aAGpBG,EAAME,kBAzBW,EA4BnBlD,SAAW,SAACgD,GACV,EAAKpF,SAAL,gBAAiBoF,EAAM/C,OAAOpI,KAAOmL,EAAM/C,OAAOvJ,SA1BlD,EAAK0C,MAAL,gBAAkBwJ,IAHD,E,qDAgCT,IAAD,EAC4B9N,KAAKsE,MAAhC1F,EADD,EACCA,MAAOC,EADR,EACQA,SAAUkP,EADlB,EACkBA,MAEnBH,EAAyB,KAAb/O,GAA6B,KAAVD,EAErC,OACE,0BAAMqP,SAAUjO,KAAKiO,UACnB,gDACA,2BACElL,KAAK,QACLnB,MAAOhD,EACPsM,SAAUlL,KAAKkL,SACf0B,KAAK,OACLC,YAAY,kBAEd,8CACA,2BACE9J,KAAK,WACLnB,MAAO/C,EACPqM,SAAUlL,KAAKkL,SACf0B,KAAK,WACLC,YAAY,aAEd,6BACA,4BAAQwB,SAAUT,EAAWhB,KAAK,UAAlC,WAICmB,GAAS,2BAAIA,EAAMO,c,GA7DAzQ,aAmEtBuR,GAAYzF,YAAQC,IAAYhM,EAApB+L,CAAkC0F,IAErCF,M,oBCzFAvR,I,MAAAA,GANO,SAAC,GAAD,IAAGI,EAAH,EAAGA,SAAH,OACpB,4BAAQ4O,KAAK,SAASpF,QAASxJ,EAASkB,WAAxC,gBCYIqQ,GAAiB,kBACrB,yBAAKhI,UAAU,oBACb,kBAACiI,GAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MACtC,kBAACH,GAAA,EAAOI,MAAR,CAAcvH,KAAM+C,EAAa7D,UAAU,cAA3C,eAGA,kBAACiI,GAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,GAAA,EAAOO,SAAR,CAAiB3N,GAAG,oBAClB,kBAAC4N,GAAA,EAAD,CAAKzI,UAAU,WACb,kBAACyI,GAAA,EAAI3O,KAAL,CAAUgH,KAAM+C,GAAhB,iBAEF,kBAAC4E,GAAA,EAAI3O,KAAL,CAAUkG,UAAU,WAAWc,KAAM+C,GACnC,kBAAC,GAAD,WAOJ6E,GAAoB,kBACxB,yBAAK1I,UAAU,oBACb,kBAACiI,GAAA,EAAD,CAAQC,GAAG,OAAOC,QAAQ,OAAOC,OAAO,MACxC,kBAACH,GAAA,EAAOI,MAAR,CAAcvH,KAAM+C,EAAa7D,UAAU,cAA3C,eAGE,kBAACiI,GAAA,EAAOK,OAAR,CAAeC,gBAAc,qBAC7B,kBAACN,GAAA,EAAOO,SAAR,CAAiB3N,GAAG,oBAClB,kBAAC4N,GAAA,EAAD,CAAKzI,UAAU,YAEf,kBAACyI,GAAA,EAAI3O,KAAL,CAAUkG,UAAU,UAAUc,KAAM+C,GAClC,kBAAC4B,EAAA,EAAD,CAAQ0C,QAAQ,gBACd,0CAQGQ,GA/CI,kBACjB,6BACE,kBAAC,EAAgBnS,SAAjB,MACG,SAAAqL,GAAQ,OAAIA,EAAW,kBAAC,GAAD,MAAqB,kBAAC,GAAD,WCsBpCF,I,OAAAA,GAfH,kBACR,kBAAC,IAAD,KACE,kBAAC,GAAD,MACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiH,OAAK,EAACC,KAAMhF,EAAaiF,UAAWrH,IAC3C,kBAAC,IAAD,CAAOmH,OAAK,EAACC,KAAMhF,EAAgBiF,UAAWC,KAC9C,kBAAC,IAAD,CAAOH,OAAK,EAACC,KAAMhF,EAAgBiF,UAAWlM,IAC9C,kBAAC,IAAD,CAAOgM,OAAK,EAACC,KAAMhF,EAAeiF,UAAWE,KAC7C,kBAAC,IAAD,CAAOJ,OAAK,EAACC,KAAMhF,EAAciF,UAAWG,KAC5C,kBAAC,IAAD,CAAOL,OAAK,EAACC,KAAMhF,EAAwBiF,UAAWI,KACtD,kBAAC,IAAD,CAAON,OAAK,EAACC,KAAMhF,EAAeiF,UAAW1B,WChBnC+B,QACW,cAA7BpG,OAAOjG,SAASsM,UAEe,UAA7BrG,OAAOjG,SAASsM,UAEhBrG,OAAOjG,SAASsM,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,EAAgBvH,SAAjB,CAA0B3H,MAAO,IAAIlD,GACnC,kBAAC,GAAD,OAEFqS,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxL,MAAK,SAAAyL,GACJA,EAAaC,gBAEdlD,OAAM,SAAAJ,GACLlM,QAAQkM,MAAMA,EAAMO,a","file":"static/js/main.097b2e5d.chunk.js","sourcesContent":["import React from \"react\";\r\n \r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\n \r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/firestore';\r\n \r\nconst config = {\r\n  apiKey: \"AIzaSyD93hKn54YxT1sAE5qKA3DZMyvAz0P6tKQ\",\r\n  authDomain: \"falcon-project-f2431.firebaseapp.com\",\r\n  databaseURL: \"https://falcon-project-f2431.firebaseio.com\",\r\n  projectId: \"falcon-project-f2431\",\r\n  storageBucket: \"falcon-project-f2431.appspot.com\",\r\n  messagingSenderId: \"555496500915\",\r\n  appId: \"1:555496500915:web:831bc1d32d318fa8504ac6\",\r\n  measurementId: \"G-E492JJPFVW\"\r\n};\r\n \r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n    this.firestore = app.firestore();\r\n  }\r\n\r\n  // *** Auth API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n  \r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  /**\r\n   * Creates the profile for the user\r\n   * @param {String} username \r\n   * @param {String} email \r\n   */\r\n  async createProfile(username, email) {\r\n    const date = new Date();\r\n\r\n    const data = {\r\n      Email: email,\r\n      Username: username,\r\n      Timestamp: date\r\n    }\r\n    \r\n    await this.firestore.collection('User').doc(email).set(data);    \r\n  }\r\n\r\n  /**\r\n   * Gets the user's username when logging in\r\n   * @param {string} username \r\n   */\r\n  async loadProfile(email) {\r\n    const profile = await this.firestore.collection('User').doc(email).get();    \r\n\r\n    return profile.data();\r\n  }\r\n\r\n  /**\r\n   * Gets the profile details for the profile page\r\n   * @param {String} email \r\n   */\r\n  async getProfile(username) {\r\n    const profile = await this.firestore.collection('User').where(\"Username\", \"==\", username).get();    \r\n\r\n    return profile.docs.map(doc => doc.data());\r\n  }\r\n\r\n  /**\r\n   * Create the post and store in the proper collections\r\n   * @param {String} title \r\n   * @param {String} link \r\n   * @param {String} username \r\n   */\r\n  async createPost(title, link, username) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n\r\n    const data = {\r\n      Username: username,\r\n      Title: title,\r\n      Link: link\r\n    }\r\n\r\n    await this.firestore.collection('Post').add(data);\r\n    await this.firestore.collection('Likes').add({\r\n      Total: 0, \r\n      Title: title\r\n    })\r\n  }\r\n\r\n  /**\r\n   * Increments the count for likes by 1\r\n   * @param {String} title \r\n   * @param {String} count \r\n   * @param {String} email \r\n   */\r\n  async upvote(title, count, email) {\r\n    const getLikeId = await this.getID(\"Likes\", title, \"Title\");\r\n    const likeId = getLikeId[0];\r\n\r\n    let value = count\r\n    value = value + 1;\r\n\r\n    console.log(value);\r\n    \r\n    const upvote = await this.firestore.collection(\"Likes\").doc(likeId).update({Total: value});\r\n    const addLike = await this.firestore.collection(\"User\").doc(email).collection(\"Post\").doc(title).set({isLiked: true})\r\n  }\r\n\r\n  /**\r\n   * Decrements the count for likes by 1\r\n   * @param {String} title \r\n   * @param {String} count \r\n   * @param {String} email \r\n   */\r\n  async downvote(title, count, email) {\r\n    const getLikeId = await this.getID(\"Likes\", title, \"Title\");\r\n    const likeId = getLikeId[0];\r\n\r\n    let value = count\r\n    value = value - 1;\r\n    if(value === -1) value = 0;\r\n    \r\n    const upvote = await this.firestore.collection(\"Likes\").doc(likeId).update({Total: value});\r\n    const addLike = await this.firestore.collection(\"User\").doc(email).collection(\"Post\").doc(title).delete();\r\n  }\r\n\r\n  /**\r\n   * Deletes all instances of the post in the collections\r\n   * @param {String} title \r\n   */\r\n  async removePost(title) {\r\n    //Get the UID tokens from each collection\r\n    const getPostId = await this.getID(\"Post\", title, \"Title\");\r\n    const getLikeId = await this.getID(\"Likes\", title, \"Title\");\r\n    const getCommentId = await this.getID(\"Comments\", title, \"Post\");\r\n\r\n    //Get the ids from the calls above\r\n    const id = getPostId[0];\r\n    const likeId = getLikeId[0];\r\n\r\n    //Remove the instance of the Post\r\n    const updatePost = await this.firestore.collection(\"Post\").doc(id).delete();\r\n    const updateLike = await this.firestore.collection(\"Likes\").doc(likeId).delete();\r\n    if(getCommentId !== null || getCommentId !== undefined) {\r\n      for (const comment of getCommentId) {\r\n        const updateComment = await this.firestore.collection(\"Comments\").doc(comment).delete();\r\n      }\r\n    }\r\n\r\n  }\r\n\r\n  /**\r\n   * Updates all instances of the post \r\n   * @param {String} oldTitle \r\n   * @param {String} title \r\n   * @param {String} link \r\n   * @param {String} username \r\n   */\r\n  async updatePost(oldTitle, title, link, username) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n    const data = {\r\n      Username: username,\r\n      Title: title,\r\n      Link: link\r\n    }\r\n\r\n    const getLikes = await this.loadLikes(oldTitle);\r\n\r\n    //Get the UID tokens from each collection\r\n    const getPostId = await this.getID(\"Post\", oldTitle, \"Title\");\r\n    const getLikeId = await this.getID(\"Likes\", oldTitle, \"Title\");\r\n    const getCommentId = await this.getID(\"Comments\", oldTitle, \"Post\");\r\n\r\n    //Get the ids from the calls above\r\n    const id = getPostId[0];\r\n    const likeId = getLikeId[0];\r\n    const commentId = getCommentId[0];\r\n\r\n    //Update the corresponding fields in each collection\r\n    const updatePost = await this.firestore.collection(\"Post\").doc(id).set(data);\r\n    const updateLike = await this.firestore.collection(\"Likes\").doc(likeId).update({\r\n      Title: title\r\n    });\r\n    const updateComment = await this.firestore.collection(\"Comments\").doc(commentId).update({\r\n      Post: title\r\n    });\r\n\r\n    //add like total to update in the frontend\r\n    data.Total = getLikes[0].Total;\r\n\r\n    return data;\r\n  }\r\n\r\n  /**\r\n   * Helper Method to get the ID for items\r\n   * @param {String} collection \r\n   * @param {String} parameter \r\n   * @param {String} string \r\n   */\r\n  async getID(collection, parameter, string) {\r\n    const getUid = await this.firestore.collection(collection).where(string, \"==\", parameter).get();\r\n\r\n    return getUid.docs.map(doc => doc.id);\r\n  }\r\n  \r\n  /**\r\n   * Method will be used for creating\r\n   * New comment\r\n   * \r\n   * @param {string} title \r\n   * @param {string} comment \r\n   * @param {string} email \r\n   */\r\n  async commentPost(title, comment, name) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n    const data = {\r\n      Post: title,\r\n      Comment: comment,\r\n      Name: name\r\n    }\r\n\r\n    const addComment = await this.firestore.collection(\"Comments\").add(data)\r\n  }\r\n\r\n  /**\r\n   * Updates the comment\r\n   * @param {String} oldComment \r\n   * @param {String} comment \r\n   */\r\n  async updateComment(oldComment, comment) {\r\n    const getCommentId = await this.getID(\"Comments\", oldComment, \"Comment\");\r\n    const commentId = getCommentId[0];\r\n\r\n    const updateComment = await this.firestore.collection(\"Comments\").doc(commentId).update({\r\n      Comment: comment\r\n    })\r\n\r\n  }\r\n\r\n  /**\r\n   * Deletes the comment from under the post\r\n   * @param {String} comment \r\n   * @param {String} username \r\n   */\r\n  async deleteComment(comment, username) {\r\n    const findComment = await this.firestore.collection(\"Comments\").where(\"Comment\", \"==\", comment).where(\"Name\", \"==\", username).get()\r\n    const getId = findComment.docs.map(doc => doc.id);\r\n    \r\n    const removeComment = await this.firestore.collection(\"Comments\").doc(getId[0]).delete();\r\n  }\r\n\r\n  async loadPosts() {\r\n    const getPosts = await this.firestore.collection(\"Post\").get();\r\n    let postArray = [];\r\n    getPosts.forEach(async (post) => {\r\n      postArray.push(post.data())\r\n    })\r\n\r\n    return postArray;\r\n  }\r\n\r\n  async loadComments(title) {\r\n    const getComments = await this.firestore.collection(\"Comments\").where(\"Post\", \"==\", title).get();\r\n\r\n    const val = getComments.docs.map(doc => doc.data());\r\n    return val;\r\n  }\r\n\r\n  async loadLikes(title) {\r\n    const getComments = await this.firestore.collection(\"Likes\").where(\"Title\", \"==\", title).get();\r\n\r\n    return getComments.docs.map(doc => doc.data());\r\n  }\r\n\r\n  async getTotalComments(title) {\r\n    const getTotalComments = await this.firestore.collection(\"Comments\").where(\"Post\", \"==\", title).get();\r\n\r\n    const val = getTotalComments.docs.map(doc => doc.data());\r\n    return val.length;\r\n  }\r\n\r\n  async getUserPostsLikes(email) {\r\n    if(email === null) return null;\r\n    const getUserLikes = await this.firestore.collection(\"User\").doc(email).collection(\"Post\").get();\r\n    return getUserLikes.docs.map(doc => doc.id);\r\n  }\r\n\r\n  async getUserComments(username) {\r\n    if(username === null) return null;\r\n\r\n    const getUserComments = await this.firestore.collection(\"Comments\").where(\"Name\", \"==\", username).get();\r\n    const getData = getUserComments.docs.map(doc => doc.id);\r\n    \r\n    return getData.length;\r\n  }\r\n\r\n  async getUserPosts(username) {\r\n    if(username === null) return null;\r\n      const getUserPosts = await this.firestore.collection(\"Post\").where(\"Username\", \"==\", username).get();\r\n\r\n      return getUserPosts.docs.map(doc => doc.data());\r\n  }\r\n}\r\n \r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n \r\nexport default Firebase;\r\n \r\nexport { FirebaseContext, withFirebase };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { FirebaseContext } from \"./firebase\";\r\n\r\nfunction Profile(props) {\r\n    const [author, setAuthor] = useState(props.location.state.Author)\r\n    const [timestamp, setTimestamp] = useState({Timestamp: ''})\r\n    const [karma, setKarma] = useState({Karma: 0});\r\n    const [comments, setComments] = useState({Comments: 0});\r\n    const [post, setPost] = useState({Post: []})\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const convertToDate = (info) => {\r\n        console.log(info)\r\n        const toDate = new Date(0)\r\n        toDate.setUTCSeconds(info[0].Timestamp.seconds);\r\n        return toDate.toString()\r\n    }    \r\n\r\n    useEffect(() => {\r\n        const getProfile = firebase.getProfile(author);\r\n        getProfile.then(info => {\r\n            console.log(info)\r\n            setTimestamp({Timestamp: convertToDate(info)});\r\n            const getTotalLikes = firebase.getUserPostsLikes(info[0].Email)\r\n            getTotalLikes.then(likes => {\r\n                setKarma({Karma: likes.length});\r\n            })\r\n        })\r\n\r\n        const getCommentTotal = firebase.getUserComments(author);\r\n        getCommentTotal.then(res => {\r\n            setComments({Comments: res});\r\n        })\r\n\r\n        const getPostTotal = firebase.getUserPosts(author);\r\n        getPostTotal.then(post => {\r\n            setPost({Post: post.length});\r\n        })\r\n    }, []);\r\n\r\n    const convertToKarma = () => {\r\n        const likes = karma.Karma;\r\n        const convert = likes * 2;\r\n\r\n        const comment = comments.Comments;\r\n        const convertComments = comment * 3\r\n\r\n        const posts = post.Post;\r\n        const convertPost = posts * 4;\r\n\r\n        return convert + convertComments + convertPost;\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={{ span: 5, offset: 3 }}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Profile Page</Card.Title>\r\n                            <Card.Text>\r\n                                <strong>User:</strong> {author}\r\n                                <br></br>\r\n                                <br></br>\r\n                                <strong>Account created on:</strong> {timestamp.Timestamp}\r\n                                <br></br>\r\n                                <br></br>\r\n                                <strong>Total Posts Likes:</strong> {karma.Karma}\r\n                                <br></br>\r\n                                <br></br>\r\n                                <strong>Karma:</strong> {convertToKarma(karma.Karma)}\r\n                                <br></br>\r\n                                <br></br>\r\n                                <strong>Posts Created:</strong> {post.Post}\r\n                                \r\n                            </Card.Text>\r\n                        </Card.Body>  \r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useState, useContext, useEffect } from 'react';\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport '../css/Upvote.css';\r\n\r\nexport default function Upvote(props) {\r\n    const [liked, setLiked] = useState({Liked: false});\r\n    const [posts, setPosts] = useState({Posts: []});\r\n    const firebase = useContext(FirebaseContext);\r\n    const getEmail = localStorage.getItem('Email');\r\n    \r\n    useEffect(() => {\r\n        if(getEmail === null){\r\n            \r\n        }else{\r\n            const getAllLikedPosts = firebase.getUserPostsLikes(getEmail);\r\n            getAllLikedPosts.then(titles => {\r\n                setPosts({Posts: titles});\r\n                if(titles.includes(props.title)) {\r\n                    setLiked({Liked: true})\r\n                }\r\n            })\r\n        }\r\n    }, [])\r\n\r\n    const clicked = () => {\r\n        if(getEmail === null){\r\n\r\n        }else{\r\n            if(liked.Liked) {\r\n                setLiked({Liked: false});\r\n                firebase.downvote(props.title, props.likes.Total, getEmail);\r\n            } else {\r\n                setLiked({Liked: true});\r\n                firebase.upvote(props.title, props.likes.Total, getEmail);   \r\n            }\r\n        }\r\n    }\r\n\r\n    if(!liked.Liked) {\r\n        return (\r\n            <div className=\"liked-icon\" onClick={() => clicked()}>\r\n                <FontAwesomeIcon icon={faCaretUp} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"unliked-icon\" onClick={() => clicked()}>\r\n                <FontAwesomeIcon icon={faCaretDown} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../css/PostTile.css';\r\nimport Upvote from './Upvote';\r\n\r\nexport default function PostTile(props) {\r\n    const history = useHistory();\r\n    const [likes, setLikes] = useState({Likes: {Total: 0}});\r\n    const [commentTotal, setCommentTotal] = useState({Comments: 0});\r\n\r\n\r\n    console.log(likes.Likes.Total);\r\n    useEffect(() => {\r\n        const getLikes = props.firebase.loadLikes(props.title);\r\n        getLikes.then(count => {\r\n            console.log(count)\r\n            if(count.length !== 0) {\r\n                console.log('here')\r\n                console.log(count[0])\r\n                setLikes({Likes: count[0]});\r\n            }\r\n        })\r\n\r\n        const getNumComments = props.firebase.getTotalComments(props.title);\r\n        getNumComments.then(num => {\r\n            setCommentTotal({Comments: num});\r\n        })\r\n\r\n    }, [])\r\n\r\n    const onClick = () => {\r\n        history.push({\r\n            pathname: `/comment/${props.title}`,\r\n            state: {\r\n                Title: props.title,\r\n                Likes: likes.Likes,\r\n                Author: props.author,\r\n                Link: props.link\r\n            }\r\n         })\r\n    }\r\n\r\n    const profile = () => {\r\n        history.push({\r\n            pathname: `/profile/${props.author}`,\r\n            state: {\r\n                Author: props.author\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"total-tile-layout\">\r\n            <p className=\"order-number\">{props.number}.</p>\r\n            <Upvote title={props.title} likes={likes.Likes} />\r\n            <div className=\"tile-layout\">\r\n                <div className=\"post-information\">\r\n                    <a href={props.link}>{props.title}</a>\r\n                </div>\r\n                \r\n                <div className=\"post-bottom-information\">\r\n                    <p>{likes.Likes.Total} points by \r\n                        <span className=\"profile-redirect\" \r\n                            onClick={() => profile()}>{\" \" + props.author}\r\n                        </span>     \r\n                    </p>\r\n                    <span style={{marginRight: 'calc(0.2vw)', marginLeft: 'calc(0.2vw)'}} >|</span>\r\n                    <p>{commentTotal.Comments} Comments</p>\r\n                    <span style={{marginRight: 'calc(0.2vw)', marginLeft: 'calc(0.2vw)'}} >|</span>\r\n                    <p onClick={() => onClick()} className=\"comment-link\">Comment</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport PostTile from './PostTile';\r\nimport '../css/Home.css';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Posts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const getPosts = this.props.firebase.loadPosts();\r\n            getPosts.then(posts => {\r\n                this.setState({Posts: posts});  \r\n            }) \r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"post-layout\">\r\n                <div className=\"post-container\">\r\n                    {this.state.Posts.map((post, index) => {\r\n                        console.log(post);\r\n                        return (\r\n                            <PostTile title={post.Title} author={post.Username} link={post.Link} firebase={this.props.firebase} number={index+1}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function HomeFunction(props) {\r\n    const value = useContext(FirebaseContext);\r\n    \r\n    return <Home firebase={value} props={props}></Home>\r\n}\r\n","import React from 'react';\r\n \r\nconst AuthUserContext = React.createContext(null);\r\n \r\nexport default AuthUserContext;","import React from \"react\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../firebase\";\r\n\r\nconst withAuthentication = (Component) => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        (authUser) => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from \"react\";\r\nimport { withRouter } from \"../../../node_modules/react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../firebase\";\r\n\r\nconst Authorization = (condition, route) => (Component) => {\r\n  class Authorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        (authUser) => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(route);\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(withRouter, withFirebase)(Authorization);\r\n};\r\n\r\nexport default Authorization;\r\n","import React, { useState, useContext } from 'react';\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport { Form, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport '../css/Comment.css';\r\n\r\nexport default function EditComment(props) {\r\n    const firebase = useContext(FirebaseContext);\r\n    const [newComment, setNewComment] = useState({Comment: ''});\r\n    const [show, setShow] = useState(true);\r\n    let comment = props.comment\r\n\r\n    const tooltip = () => {\r\n        return (\r\n            <Tooltip>\r\n                Edit comment\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    const editComment = () => {\r\n        if(show) {\r\n            setShow(!show);\r\n        } else {\r\n            const updateComment = firebase.updateComment(comment.Comment, newComment.Comment);\r\n            setTimeout(() => {\r\n                setShow(!show);\r\n                window.location.reload()\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n    \r\n    if(show) {\r\n        return (\r\n            <div>\r\n                <p className=\"comment-p\">{comment.Comment}</p>\r\n                {localStorage.getItem('Username') === comment.Name ? \r\n                <OverlayTrigger placement=\"right\" overlay={tooltip()} delay={{ show: 200, hide: 200}}>\r\n                    <div className=\"comment-edit\" \r\n                        onClick={(e) => editComment()}>\r\n                        <FontAwesomeIcon icon={faEdit}/>\r\n                    </div>\r\n                </OverlayTrigger> : null}\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <Form>\r\n                    <Form.Control defaultValue={comment.Comment} onChange={(e) => setNewComment({Comment: e.target.value})}></Form.Control>\r\n                </Form>\r\n                {localStorage.getItem('Username') === comment.Name ? \r\n                    <OverlayTrigger placement=\"right\" overlay={tooltip()} delay={{ show: 200, hide: 200}}>\r\n                        <div className=\"comment-edit\" \r\n                            onClick={(e) => editComment()}>\r\n                            <FontAwesomeIcon icon={faEdit}/>\r\n                        </div>\r\n                    </OverlayTrigger> : null}\r\n            </div>\r\n        )\r\n    }\r\n}","/* Temp routes for testing, update later for prod */\r\nexport const ROUTES = {\r\n    PROFILE: \"/profile/:name\",\r\n    CREATE: \"/create_story\",\r\n    LOGIN: \"/login\",\r\n    SIGNUP: \"/signup\",\r\n    FORGOT_PASSWORD: \"/forgot_password\",\r\n    HOME: \"/\",\r\n    COMMENT: \"/comment/:title\"\r\n  };","import React, { useContext } from 'react';\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport '../css/Comment.css';\r\nimport { Row, Container, Col, Form, Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\r\nimport { Authorization } from './session';\r\nimport Upvote from './Upvote';\r\nimport EditComment from './EditComment';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrash, faEdit } from '@fortawesome/free-solid-svg-icons'\r\nimport { ROUTES } from \"../routes\";\r\n\r\nclass Comment extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props.prop.location.state)\r\n\r\n        this.state = {\r\n            Author: props.prop.location.state.Author,\r\n            Likes: props.prop.location.state.Likes,\r\n            Title: props.prop.location.state.Title,\r\n            Link: props.prop.location.state.Link,\r\n            CommentTotal: 0,\r\n            Comments: [],\r\n            Text: '',\r\n            NewTitle: '',\r\n            ShowTextbox: false,\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n        this.remove = this.remove.bind(this);\r\n        this.editTitle = this.editTitle.bind(this);\r\n        this.deletePost = this.deletePost.bind(this);\r\n        this.tooltipDelete = this.tooltipDelete.bind(this);\r\n        this.tooltipEdit = this.tooltipEdit.bind(this);\r\n        this.redirect = this.redirect.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const getNumComments = this.props.firebase.getTotalComments(this.state.Title);\r\n        getNumComments.then(num => {\r\n            this.setState({CommentTotal: num});\r\n        })  \r\n        \r\n        const loadComments = this.props.firebase.loadComments(this.state.Title);\r\n        loadComments.then(comments => {\r\n            console.log(comments)\r\n            this.setState({Comments: comments})\r\n        })   \r\n    }\r\n\r\n    handleClick() {\r\n        const text = this.state.Text;\r\n        const username = localStorage.getItem('Username');\r\n        const addComment = this.props.firebase.commentPost(this.state.Title, text, username);\r\n        this.setState({Text: ''});\r\n\r\n        this.componentDidMount();\r\n    }\r\n\r\n    remove(comment, name) {\r\n        const removeComment = this.props.firebase.deleteComment(comment, name);\r\n        setTimeout(() => {\r\n            window.location.reload();\r\n        }, 1000)\r\n    }\r\n\r\n    editTitle() {\r\n        if(this.state.ShowTextbox) {\r\n            if(this.state.NewTitle === '') return;\r\n            console.log('here');\r\n            const updateTitle = this.props.firebase.updatePost(this.state.Title, this.state.NewTitle, this.state.Link, this.state.Author);\r\n            updateTitle.then(data => {\r\n                console.log(data);\r\n                this.setState({\r\n                    Author: data.Username,\r\n                    Likes: data.Total,\r\n                    Title: data.Title,\r\n                    Link: data.Link\r\n                })\r\n            })\r\n            this.setState({ShowTextbox: false, NewTitle: ''});\r\n        } else {\r\n            this.setState({ShowTextbox: true});\r\n        }\r\n    }\r\n\r\n    deletePost() {\r\n        this.props.firebase.removePost(this.state.Title);\r\n        console.log(this.props)\r\n        this.props.prop.history.push(\"/\")\r\n    }\r\n\r\n    tooltipDelete(tag) {\r\n        return (\r\n            <Tooltip>\r\n                Delete {tag}\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    tooltipEdit(tag) {\r\n        return (\r\n            <Tooltip>\r\n                Edit {tag}\r\n            </Tooltip>\r\n        )\r\n    }\r\n\r\n    redirect() {\r\n        this.props.prop.history.push({\r\n            pathname: `/profile/${this.state.Author}`,\r\n            state: {\r\n                Author: this.state.Author\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"comment-layout\">\r\n                <div className=\"comment-background\">\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col md={{ span: 4, offset: 1 }}>\r\n                                <div className=\"post-description\">\r\n                                    <div className=\"post-header-text\">\r\n                                        <p className=\"post-title\"><strong><a href={this.state.Link}>{this.state.Title}</a></strong></p>\r\n                                        {localStorage.getItem('Username') == this.state.Author ? \r\n                                        <OverlayTrigger placement=\"right\" overlay={this.tooltipEdit(\"Title\")} delay={{ show: 200, hide: 200}}>\r\n                                            <div className=\"edit-title\" onClick={() => this.editTitle()}>\r\n                                                <FontAwesomeIcon icon={faEdit} />\r\n                                            </div>\r\n                                        </OverlayTrigger> : null}\r\n                                    </div>\r\n\r\n                                    {localStorage.getItem('Username') == this.state.Author ? \r\n                                        <OverlayTrigger placement=\"right\" overlay={this.tooltipDelete(\"Post\")} delay={{ show: 200, hide: 200}}>\r\n                                            <div className=\"delete-post\" onClick={() => this.deletePost()}>\r\n                                                <FontAwesomeIcon icon={faTrash} />\r\n                                            </div>\r\n                                        </OverlayTrigger> : null}\r\n\r\n                                    <p className=\"post-info\"><Upvote title={this.state.Title} likes={this.state.Likes} />\r\n                                    {\" \"}{this.state.Likes.Total} points by \r\n                                        <div onClick={() => this.redirect()} className=\"author-link\">\r\n                                            {this.state.Author}\r\n                                        </div> | {this.state.CommentTotal} comments </p>\r\n                                </div>\r\n                                {this.state.ShowTextbox ? \r\n                                    <Row>\r\n                                        <Col md={{ span: 5, offset: 0 }}>\r\n                                            <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                                                <Form.Control  \r\n                                                    type=\"text\"\r\n                                                    onChange={(e) => this.setState({NewTitle: e.target.value})}\r\n                                                    value={this.state.NewTitle}\r\n                                                    placeholder=\"Enter new title here...\"\r\n                                                    />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row> : null }\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        {localStorage.getItem('Username') ? \r\n                        <Row>\r\n                            <Col md={{ span: 5, offset: 1 }}>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                                    <Form.Control as=\"textarea\" rows=\"4\" \r\n                                        type=\"text\"\r\n                                        onChange={(e) => this.setState({Text: e.target.value})}\r\n                                        value={this.state.Text}\r\n                                        placeholder=\"Enter comment here...\"\r\n                                        />\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row> : null}\r\n\r\n                        <Row>\r\n                            <Col md={{ span: 5, offset: 1 }}>\r\n                                <Button onClick={() => this.handleClick()}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <div className=\"comment-div\">\r\n                        <div className=\"comment-container\">\r\n                            {this.state.Comments.map(comment => {\r\n                                if(comment === null) return;\r\n                                return (\r\n                                    <div className=\"comment-node\" key={comment.Comment}>\r\n                                        <h5>{comment.Name}</h5>\r\n                                        <EditComment comment={comment} />\r\n                                        {localStorage.getItem('Username') === comment.Name ? \r\n                                        <OverlayTrigger placement=\"right\" overlay={this.tooltipDelete(\"Comment\")} delay={{ show: 200, hide: 200}}>\r\n                                            <div className=\"comment-delete\" \r\n                                                onClick={() => this.remove(comment.Comment, comment.Name)}>\r\n                                                <FontAwesomeIcon icon={faTrash}/>\r\n                                            </div>\r\n                                        </OverlayTrigger> : null}\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst condition = authUser => !!authUser;\r\nconst route = ROUTES.LOGIN;\r\n\r\nfunction CommentFunction(props) {\r\n    const value = useContext(FirebaseContext);\r\n    \r\n    return <Comment firebase={value} prop={props}></Comment>\r\n}\r\n\r\nexport default Authorization(condition, route)(CommentFunction);","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Authorization from './session/Authorization';\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\r\n\r\nfunction CreateStory() {\r\n    const [url, setUrl] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [validationUrl, setValidationUrl] = useState(false);\r\n    const [validationTitle, setValidationTitle] = useState(false);\r\n    const firebase = useContext(FirebaseContext);\r\n    const history = useHistory();\r\n\r\n    const isValidUrl = () => {\r\n        return url.includes(\".com\") ? true : false\r\n    }\r\n\r\n    const isValidTitle = () => {\r\n        const isValid = title === '' ? false : true;\r\n        return isValid;\r\n    }\r\n\r\n    const submit = () => {\r\n        const isTitleTrue = !isValidTitle() ? setValidationTitle(true) : setValidationTitle(false);\r\n        const isUrlTrue = !isValidUrl() ? setValidationUrl(true) : setValidationUrl(false);\r\n\r\n        if(title && url) {\r\n            const username = localStorage.getItem('Username')\r\n            const createPost = firebase.createPost(title, url, username);\r\n            history.push('/');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={{ span: 4, offset: 1 }}>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Title\" \r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                isInvalid={validationTitle}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please enter a valid Title\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupPassword\">\r\n                            <Form.Label>URL</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Valid URL\" \r\n                            onChange={(e) => setUrl(e.target.value)}\r\n                            isInvalid={validationUrl}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please enter a valid url\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={{ span: 4, offset: 1 }}>\r\n                    <Button onClick={() => submit()}>Create Post</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default Authorization(condition)(CreateStory);","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../firebase\";\r\nimport { ROUTES } from \"../../routes\";\r\n\r\nconst ForgetPasswordPage = () => (\r\n  <div>\r\n    <h1>Forget Password</h1>\r\n    <ForgetPasswordForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null,\r\n};\r\n\r\nclass ForgetPasswordFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst ForgetPasswordLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.FORGOT_PASSWORD}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default ForgetPasswordPage;\r\n\r\nconst ForgetPasswordForm = withFirebase(ForgetPasswordFormBase);\r\n\r\nexport { ForgetPasswordForm, ForgetPasswordLink };","import React, { Component } from \"react\";\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../firebase';\r\nimport { ROUTES } from \"../../routes\";\r\n \r\nclass SignUpPage extends Component{\r\n render(){\r\n     return(\r\n        <div>\r\n        <h1>SignUp</h1>\r\n        <SignUpForm />\r\n      </div>\r\n     );\r\n } \r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { username, email, passwordOne } = this.state;\r\n\r\n        this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                return this.props.firebase\r\n                  .user(authUser.user.uid)\r\n                  .set({\r\n                    username,\r\n                    email,\r\n                });\r\n            })\r\n            .then(() =>{\r\n                this.setState({ ...INITIAL_STATE});\r\n                this.props.firebase.createProfile(username, email);\r\n                localStorage.setItem('Email', email);\r\n                localStorage.setItem('Username', username);\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            })\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({[event.target.name]: event.target.value });\r\n    };\r\n\r\n    render(){\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n        } = this.state;\r\n\r\n        const isInvalid =\r\n        passwordOne !== passwordTwo ||\r\n        passwordOne === '' ||\r\n        email === '' ||\r\n        username === '';\r\n\r\n        return(\r\n            <form onSubmit={this.onSubmit}>\r\n                <p>Enter Your Username:</p>\r\n                <input\r\n                    name= \"username\"\r\n                    value= {username}\r\n                    onChange= {this.onChange}\r\n                    type= \"text\"\r\n                    placeholder= \"Enter Username\"\r\n                />\r\n                <p>Enter Your Email:</p>\r\n                <input\r\n                    name= \"email\"\r\n                    value= {email}\r\n                    onChange= {this.onChange}\r\n                    type= \"email\"\r\n                    placeholder= \"Email Address\"\r\n                />\r\n                <br />\r\n                <p>Enter Password:</p>\r\n                <input\r\n                    name= \"passwordOne\"\r\n                    value= {passwordOne}\r\n                    onChange= {this.onChange}\r\n                    type= \"password\"\r\n                    placeholder= \"Password\"\r\n                />\r\n                <p>Confirm Password:</p>\r\n                <input\r\n                    name= \"passwordTwo\"\r\n                    value= {passwordTwo}\r\n                    onChange= {this.onChange}\r\n                    type= \"password\"\r\n                    placeholder= \"Confirm Password\"\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignUpLink = () =>(\r\n    <p>\r\n        Dont have an account? <Link to={ROUTES.SIGNUP}>Sign Up</Link>\r\n    </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport {SignUpForm, SignUpLink};","import React, { Component } from \"react\";\r\nimport { withRouter } from \"../../../node_modules/react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { ForgetPasswordLink } from \"./forgotPassword\";\r\nimport { SignUpLink } from \"./signup\";\r\nimport { withFirebase } from \"../firebase\";\r\nimport { ROUTES } from \"../../routes\";\r\n\r\n\r\nclass LoginIn extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>SignIn</h1>\r\n        <LogInForm />\r\n        <ForgetPasswordLink />\r\n        <SignUpLink />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null,\r\n};\r\n\r\nclass LogInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        localStorage.setItem('Email', email);\r\n        const getProfile = this.props.firebase.loadProfile(email)\r\n        getProfile.then(profile => {\r\n          console.log(profile);\r\n          localStorage.setItem('Username', profile.Username);  \r\n        })\r\n        this.setState({ ...INITIAL_STATE });\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <p>Enter Your Email:</p>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <p>Enter Password:</p>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst LogInForm = compose(withRouter, withFirebase)(LogInFormBase);\r\n\r\nexport default LoginIn;\r\n\r\nexport { LogInForm };\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../firebase\";\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","import React from \"react\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\nimport { ROUTES } from \"../routes\";\r\nimport { AuthUserContext } from \"./session\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport SignOutButton from \"./authentication/signout\";\r\n\r\nconst Navigation = () => (\r\n  <div>\r\n    <AuthUserContext.Consumer>\r\n      {authUser => authUser ? <NavigationAuth /> : <NavigationNonAuth />}\r\n    </AuthUserContext.Consumer>\r\n  </div>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n  <div className=\"bootstrap-scoped\">\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href={ROUTES.HOME} className=\"brand-name\">\r\n        Hacker News\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href={ROUTES.CREATE}>Create Story</Nav.Link>\r\n        </Nav>\r\n        <Nav.Link className=\"sign_out\" href={ROUTES.HOME}>\r\n          <SignOutButton />\r\n        </Nav.Link>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </div>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <div className=\"bootstrap-scoped\">\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n    <Navbar.Brand href={ROUTES.HOME} className=\"brand-name\">\r\n        Hacker News\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n        </Nav>\r\n        <Nav.Link className=\"sign_in\" href={ROUTES.LOGIN}>\r\n          <Button variant=\"outline-info\">\r\n            <b>LogIn</b>\r\n          </Button>\r\n        </Nav.Link>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </div>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Profile from \"./components/Profile\";\r\nimport HomeFunction from './components/Home';\r\nimport CommentFunction from './components/Comment';\r\nimport createStory from \"./components/createStory\";\r\nimport login from \"./components/authentication/login\";\r\nimport SignUpPage from \"./components/authentication/signup\"\r\nimport forgotPassword from \"./components/authentication/forgotPassword\";\r\nimport Navigation from \"./components/Navigation\"\r\nimport { withAuthentication } from \"./components/session\";\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/* Misc */\r\nimport { ROUTES } from \"./routes\";\r\n\r\nconst App = () => (\r\n    <Router>\r\n      <Navigation />\r\n        <Switch>\r\n          <Route exact path={ROUTES.HOME} component={HomeFunction} />\r\n          <Route exact path={ROUTES.COMMENT} component={CommentFunction} />\r\n          <Route exact path={ROUTES.PROFILE} component={Profile} />\r\n          <Route exact path={ROUTES.CREATE} component={createStory} />\r\n          <Route exact path={ROUTES.LOGIN} component={login} />\r\n          <Route exact path={ROUTES.FORGOT_PASSWORD} component={forgotPassword} />\r\n          <Route exact path={ROUTES.SIGNUP} component={SignUpPage} />\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Firebase, { FirebaseContext } from './components/firebase';\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}