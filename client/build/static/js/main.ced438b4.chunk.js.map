{"version":3,"sources":["components/firebase/context.js","components/firebase/firebase.js","components/firebase/index.js","components/Profile.js","components/Upvote.js","components/PostTile.js","components/Home.js","components/Comment.js","components/session/context.js","routes.js","components/createStory.js","components/session/Authorization.js","components/authentication/forgotPassword.js","components/authentication/signup.js","components/authentication/login.js","components/session/Authentication.js","components/authentication/signout.js","components/Navigation.js","App.js","serviceWorker.js","index.js"],"names":["FirebaseContext","React","createContext","withFirebase","Component","props","Consumer","firebase","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","user","uid","db","ref","users","app","initializeApp","this","database","firestore","username","date","Date","data","Email","Username","Timestamp","collection","doc","set","where","get","profile","docs","map","title","link","Title","Link","Total","count","value","isLiked","delete","oldTitle","removePost","createPost","comment","name","update","getPosts","postArray","forEach","post","a","push","getComments","getTotalComments","keys","Object","key","undefined","getUserLikes","id","getUserComments","getData","getUserPosts","Profile","useState","location","state","Author","author","timestamp","setTimestamp","Karma","karma","setKarma","Comments","comments","setComments","Post","setPost","useContext","convertToDate","info","toDate","setUTCSeconds","seconds","toString","useEffect","loadProfile","then","getUserPostsLikes","likes","length","res","Container","fluid","Row","Col","md","span","offset","Card","Body","Text","Upvote","Liked","liked","setLiked","Posts","setPosts","getEmail","localStorage","getItem","titles","includes","clicked","downvote","upvote","className","onClick","icon","faCaretDown","faCaretUp","PostTile","history","useHistory","Likes","setLikes","commentTotal","setCommentTotal","loadLikes","console","log","num","number","href","pathname","style","marginRight","marginLeft","Home","setTimeout","loadPosts","posts","setState","index","HomeFunction","Comment","prop","CommentTotal","handleClick","bind","loadComments","result","text","commentPost","componentDidMount","Form","Group","controlId","Control","as","rows","type","onChange","e","target","Button","CommentFunction","AuthUserContext","ROUTES","PROFILE","CREATE","LOGIN","SIGNUP","FORGOT_PASSWORD","HOME","COMMENT","Authorization","condition","listener","onAuthStateChanged","authUser","compose","withRouter","url","setUrl","setTitle","validationUrl","setValidationUrl","validationTitle","setValidationTitle","submit","Label","placeholder","isInvalid","Feedback","INITIAL_STATE","error","ForgetPasswordFormBase","onSubmit","event","catch","preventDefault","disabled","message","ForgetPasswordLink","to","ForgetPasswordPage","ForgetPasswordForm","SignUpPage","SignUpForm","passwordOne","passwordTwo","SignUpFormBase","createProfile","setItem","SignUpLink","LoginIn","LogInForm","LogInFormBase","withAuthentication","WithAuthentication","Provider","NavigationAuth","Navbar","bg","variant","expand","Brand","Toggle","aria-controls","Collapse","Nav","STORIES","NavigationNonAuth","Navigation","exact","path","component","createStory","login","forgotPassword","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ced438b4.chunk.js","sourcesContent":["import React from \"react\";\r\n \r\nconst FirebaseContext = React.createContext(null);\r\n\r\nexport const withFirebase = Component => props => (\r\n    <FirebaseContext.Consumer>\r\n      {firebase => <Component {...props} firebase={firebase} />}\r\n    </FirebaseContext.Consumer>\r\n  );\r\n \r\nexport default FirebaseContext;","import app from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\nimport 'firebase/firestore';\r\n \r\nconst config = {\r\n  apiKey: \"AIzaSyD93hKn54YxT1sAE5qKA3DZMyvAz0P6tKQ\",\r\n  authDomain: \"falcon-project-f2431.firebaseapp.com\",\r\n  databaseURL: \"https://falcon-project-f2431.firebaseio.com\",\r\n  projectId: \"falcon-project-f2431\",\r\n  storageBucket: \"falcon-project-f2431.appspot.com\",\r\n  messagingSenderId: \"555496500915\",\r\n  appId: \"1:555496500915:web:831bc1d32d318fa8504ac6\",\r\n  measurementId: \"G-E492JJPFVW\"\r\n};\r\n \r\nclass Firebase {\r\n  constructor() {\r\n    app.initializeApp(config);\r\n\r\n    this.auth = app.auth();\r\n    this.db = app.database();\r\n    this.firestore = app.firestore();\r\n  }\r\n\r\n  // *** Auth API ***\r\n  doCreateUserWithEmailAndPassword = (email, password) =>\r\n    this.auth.createUserWithEmailAndPassword(email, password);\r\n\r\n  doSignInWithEmailAndPassword = (email, password) =>\r\n    this.auth.signInWithEmailAndPassword(email, password);\r\n\r\n  doSignOut = () => this.auth.signOut();\r\n\r\n  doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\r\n\r\n  doPasswordUpdate = password =>\r\n    this.auth.currentUser.updatePassword(password);\r\n  \r\n  // *** User API ***\r\n\r\n  user = uid => this.db.ref(`users/${uid}`);\r\n\r\n  users = () => this.db.ref('users');\r\n\r\n  async createProfile(username, email) {\r\n    const date = new Date();\r\n\r\n    const data = {\r\n      Email: email,\r\n      Username: username,\r\n      Timestamp: date\r\n    }\r\n    \r\n    await this.firestore.collection('User').doc(email).set(data);    \r\n  }\r\n\r\n  async loadProfile(username) {\r\n    const profile = await this.firestore.collection('User').where(\"Username\", \"==\", username).get();    \r\n\r\n    return profile.docs.map(doc => doc.data());\r\n  }\r\n\r\n  async createPost(title, link, username) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n\r\n    const data = {\r\n      Username: username,\r\n      Title: title,\r\n      Link: link\r\n    }\r\n\r\n    await this.firestore.collection('Post').doc(title).set(data);\r\n    await this.firestore.collection('Comments').doc(title).set({[username]: null})\r\n    await this.firestore.collection('Likes').doc(title).set({Total: 0})\r\n  }\r\n\r\n  async upvote(title, count, email) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n\r\n    let value = count\r\n    value = value + 1;\r\n    const data = {\r\n      Total: value\r\n    }\r\n    \r\n    const upvote = await this.firestore.collection(\"Likes\").doc(title).set(data);\r\n    const addLike = await this.firestore.collection(\"User\").doc(email).collection(\"Post\").doc(title).set({isLiked: true})\r\n  }\r\n\r\n  async downvote(title, count, email) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n\r\n    let value = count\r\n    value = value - 1;\r\n    if(value === -1) value = 0;\r\n    const data = {\r\n      Total: value\r\n    }\r\n    \r\n    const upvote = await this.firestore.collection(\"Likes\").doc(title).set(data);\r\n    const addLike = await this.firestore.collection(\"User\").doc(email).collection(\"Post\").doc(title).delete();\r\n  }\r\n\r\n  async removePost(title) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n    \r\n    const removePost = await this.firestore.collection('Post').doc(title).delete();\r\n  }\r\n\r\n  async updatePost(oldTitle, title, link, email) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n    const data = {\r\n      Link: link,\r\n      Title: title, \r\n      Email: email \r\n    }\r\n\r\n    const removeOldPost = await this.removePost(oldTitle);\r\n    const updatePost = await this.createPost(title, link, email);\r\n  }\r\n  \r\n  /**\r\n   * Method will be used for both creating new post \r\n   * and updating comment. User will only be allowed\r\n   * to comment Once on a post.\r\n   * @param {string} title \r\n   * @param {string} comment \r\n   * @param {string} email \r\n   */\r\n  async commentPost(title, comment, name) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n    const data = {\r\n      [name]: comment\r\n    }\r\n\r\n    const addComment = await this.firestore.collection(\"Comments\").doc(title).update(data)\r\n  }\r\n\r\n  async deleteComment(title, email) {\r\n    // console.log(this.auth.currentUser)\r\n    // if(!this.auth.currentUser) return null;\r\n\r\n    const addComment = await this.firestore.collection(\"Comments\").doc(title).\r\n      collection(email).delete()\r\n  }\r\n\r\n  async loadPosts() {\r\n    const getPosts = await this.firestore.collection(\"Post\").get();\r\n    let postArray = [];\r\n    getPosts.forEach(async (post) => {\r\n      postArray.push(post.data())\r\n    })\r\n\r\n    return postArray;\r\n  }\r\n\r\n  async loadComments(title) {\r\n    const getComments = await this.firestore.collection(\"Comments\").doc(title).get();\r\n\r\n    return getComments.data();\r\n  }\r\n\r\n  async loadLikes(title) {\r\n    const getComments = await this.firestore.collection(\"Likes\").doc(title).get();\r\n\r\n    return getComments.data();\r\n  }\r\n\r\n  async getTotalComments(title) {\r\n    const getTotalComments = await this.firestore.collection(\"Comments\").doc(title).get();\r\n\r\n    let count = 0;\r\n    const keys = Object.keys(getTotalComments.data());\r\n    const data = getTotalComments.data()\r\n    for(let key of keys) {\r\n      if(data[key] === null || data[key] === undefined) {\r\n        continue;\r\n      } else {\r\n        count++;\r\n      }\r\n    }\r\n\r\n    return count;\r\n  }\r\n\r\n  async getUserPostsLikes(email) {\r\n    const getUserLikes = await this.firestore.collection(\"User\").doc(email).collection(\"Post\").get();\r\n    return getUserLikes.docs.map(doc => doc.id);\r\n  }\r\n\r\n  async getUserComments(username) {\r\n    const getUserComments = await this.firestore.collection(\"Comments\").get();\r\n    const getData = getUserComments.docs;\r\n    let count = 0;\r\n    \r\n    for (const doc of getData) {\r\n      if(doc.data()[username] == null) continue;\r\n\r\n      count++\r\n    }\r\n    \r\n    return count;\r\n  }\r\n\r\n  async getUserPosts(username) {\r\n    const getUserPosts = await this.firestore.collection(\"Post\").where(\"Username\", \"==\", username).get();\r\n\r\n    return getUserPosts.docs.map(doc => doc.data());\r\n  }\r\n}\r\n \r\nexport default Firebase;","import FirebaseContext, { withFirebase } from './context';\r\nimport Firebase from './firebase';\r\n \r\nexport default Firebase;\r\n \r\nexport { FirebaseContext, withFirebase };","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { Card, Container, Row, Col } from 'react-bootstrap';\r\nimport { FirebaseContext } from \"./firebase\";\r\n\r\nfunction Profile(props) {\r\n    const [author, setAuthor] = useState(props.location.state.Author)\r\n    const [timestamp, setTimestamp] = useState({Timestamp: ''})\r\n    const [karma, setKarma] = useState({Karma: 0});\r\n    const [comments, setComments] = useState({Comments: 0});\r\n    const [post, setPost] = useState({Post: []})\r\n    const firebase = useContext(FirebaseContext);\r\n\r\n    const convertToDate = (info) => {\r\n        const toDate = new Date(0)\r\n        toDate.setUTCSeconds(info[0].Timestamp.seconds);\r\n        return toDate.toString()\r\n    }    \r\n\r\n    useEffect(() => {\r\n        const getProfile = firebase.loadProfile(author);\r\n        getProfile.then(info => {\r\n            setTimestamp({Timestamp: convertToDate(info)});\r\n            const getTotalLikes = firebase.getUserPostsLikes(info[0].Email)\r\n            getTotalLikes.then(likes => {\r\n                setKarma({Karma: likes.length});\r\n            })\r\n        })\r\n\r\n        const getCommentTotal = firebase.getUserComments(author);\r\n        getCommentTotal.then(res => {\r\n            setComments({Comments: res});\r\n        })\r\n\r\n        const getPostTotal = firebase.getUserPosts(author);\r\n        getPostTotal.then(post => {\r\n            setPost({Post: post.length});\r\n        })\r\n    }, []);\r\n\r\n    const convertToKarma = () => {\r\n        const likes = karma.Karma;\r\n        const convert = likes * 2;\r\n\r\n        const comment = comments.Comments;\r\n        const convertComments = comment * 3\r\n\r\n        const posts = post.Post;\r\n        const convertPost = posts * 4;\r\n\r\n        return convert + convertComments + convertPost;\r\n    }\r\n\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={{ span: 5, offset: 3 }}>\r\n                    <Card>\r\n                        <Card.Body>\r\n                            <Card.Title>Profile Page</Card.Title>\r\n                            <Card.Text>\r\n                                <strong>User:</strong> {author}\r\n                                <br></br>\r\n                                <br></br>\r\n                                <strong>Account created on:</strong> {timestamp.Timestamp}\r\n                                <br></br>\r\n                                <br></br>\r\n                                <strong>Total Posts Likes:</strong> {karma.Karma}\r\n                                <br></br>\r\n                                <br></br>\r\n                                <strong>Karma:</strong> {convertToKarma(karma.Karma)}\r\n                                <br></br>\r\n                                <br></br>\r\n                                <strong>Posts Created:</strong> {post.Post}\r\n                                \r\n                            </Card.Text>\r\n                        </Card.Body>  \r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React, { useState, useContext, useEffect } from 'react';\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCaretUp, faCaretDown } from '@fortawesome/free-solid-svg-icons'\r\nimport '../css/Upvote.css';\r\n\r\nexport default function Upvote(props) {\r\n    const [liked, setLiked] = useState({Liked: false});\r\n    const [posts, setPosts] = useState({Posts: []});\r\n    const firebase = useContext(FirebaseContext);\r\n    const getEmail = localStorage.getItem('Email');\r\n\r\n    useEffect(() => {\r\n        const getAllLikedPosts = firebase.getUserPostsLikes(getEmail);\r\n        getAllLikedPosts.then(titles => {\r\n            setPosts({Posts: titles});\r\n            if(titles.includes(props.title)) {\r\n                setLiked({Liked: true})\r\n            }\r\n        })\r\n    }, [])\r\n\r\n    const clicked = () => {\r\n        if(liked.Liked) {\r\n            setLiked({Liked: false});\r\n            firebase.downvote(props.title, props.likes, getEmail);\r\n        } else {\r\n            setLiked({Liked: true});\r\n            firebase.upvote(props.title, props.likes, getEmail);   \r\n        }\r\n    }\r\n\r\n    if(!liked.Liked) {\r\n        return (\r\n            <div className=\"liked-icon\" onClick={() => clicked()}>\r\n                <FontAwesomeIcon icon={faCaretUp} />\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"unliked-icon\" onClick={() => clicked()}>\r\n                <FontAwesomeIcon icon={faCaretDown} />\r\n            </div>\r\n        )\r\n    }\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport '../css/PostTile.css';\r\nimport Upvote from './Upvote';\r\n\r\nexport default function PostTile(props) {\r\n    const history = useHistory();\r\n    const [likes, setLikes] = useState({Likes: 0});\r\n    const [commentTotal, setCommentTotal] = useState({Comments: 0});\r\n\r\n    useEffect(() => {\r\n        const getLikes = props.firebase.loadLikes(props.title);\r\n        getLikes.then(count => {\r\n            console.log(count)\r\n            setLikes({Likes: count.Total});\r\n        })\r\n\r\n        const getNumComments = props.firebase.getTotalComments(props.title);\r\n        getNumComments.then(num => {\r\n            setCommentTotal({Comments: num});\r\n        })\r\n\r\n    }, [])\r\n\r\n    const onClick = () => {\r\n        history.push({\r\n            pathname: `/comment/${props.title}`,\r\n            state: {\r\n                Title: props.title,\r\n                Likes: likes.Likes,\r\n                Author: props.author\r\n            }\r\n         })\r\n    }\r\n\r\n    const profile = () => {\r\n        history.push({\r\n            pathname: `/profile/${props.author}`,\r\n            state: {\r\n                Author: props.author\r\n            }\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"total-tile-layout\">\r\n            <p className=\"order-number\">{props.number}.</p>\r\n            <Upvote title={props.title} likes={likes.Likes} />\r\n            <div className=\"tile-layout\">\r\n                <div className=\"post-information\">\r\n                    <a href={props.link}>{props.title}</a>\r\n                </div>\r\n                \r\n                <div className=\"post-bottom-information\">\r\n                    <p>{likes.Likes} points by \r\n                        <span className=\"profile-redirect\" \r\n                            onClick={() => profile()}>{\" \" + props.author}\r\n                        </span>     \r\n                    </p>\r\n                    <span style={{marginRight: 'calc(0.2vw)', marginLeft: 'calc(0.2vw)'}} >|</span>\r\n                    <p>{commentTotal.Comments} Comments</p>\r\n                    <span style={{marginRight: 'calc(0.2vw)', marginLeft: 'calc(0.2vw)'}} >|</span>\r\n                    <p onClick={() => onClick()} className=\"comment-link\">Comment</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useContext } from 'react';\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport PostTile from './PostTile';\r\nimport '../css/Home.css';\r\n\r\nclass Home extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            Posts: []\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            const getPosts = this.props.firebase.loadPosts();\r\n            getPosts.then(posts => {\r\n            this.setState({Posts: posts});  \r\n        }) \r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"post-layout\">\r\n                <div className=\"post-container\">\r\n                    {this.state.Posts.map((post, index) => {\r\n                        console.log(post);\r\n                        return (\r\n                            <PostTile title={post.Title} author={post.Username} link={post.Link} firebase={this.props.firebase} number={index+1}/>\r\n                        )\r\n                    })}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function HomeFunction(props) {\r\n    const value = useContext(FirebaseContext);\r\n    \r\n    return <Home firebase={value} props={props}></Home>\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport '../css/Comment.css';\r\nimport { Row, Container, Col, Form, Button } from 'react-bootstrap';\r\n\r\nclass Comment extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        console.log(props);\r\n\r\n        this.state = {\r\n            Author: props.prop.location.state.Author,\r\n            Likes: props.prop.location.state.Likes,\r\n            Title: props.prop.location.state.Title,\r\n            CommentTotal: 0,\r\n            Comments: [],\r\n            Text: ''\r\n        }\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const getNumComments = this.props.firebase.getTotalComments(this.state.Title);\r\n        getNumComments.then(num => {\r\n            this.setState({CommentTotal: num});\r\n        })  \r\n        \r\n        const loadComments = this.props.firebase.loadComments(this.state.Title);\r\n        loadComments.then(comments => {\r\n            const result = Object.keys(comments).map((key) => [key, comments[key]]);\r\n            this.setState({Comments: result})\r\n        })   \r\n    }\r\n\r\n    handleClick() {\r\n        const text = this.state.Text;\r\n        const username = localStorage.getItem('Username');\r\n        const addComment = this.props.firebase.commentPost(this.state.Title, text, username);\r\n        this.setState({Text: ''});\r\n\r\n        this.componentDidMount();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"comment-layout\">\r\n                <div className=\"comment-background\">\r\n                    <Container fluid>\r\n                        <Row>\r\n                            <Col md={{ span: 4, offset: 1 }}>\r\n                                <div className=\"post-description\">\r\n                                    <p className=\"post-title\">{this.state.Title}</p>\r\n                                    <p className=\"post-info\">{this.state.Likes} points by {this.state.Author} | {this.state.CommentTotal} comments </p>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={{ span: 5, offset: 1 }}>\r\n                                <Form.Group controlId=\"exampleForm.ControlTextarea1\" >\r\n                                    <Form.Control as=\"textarea\" rows=\"4\" \r\n                                        type=\"text\"\r\n                                        onChange={(e) => this.setState({Text: e.target.value})}\r\n                                        value={this.state.Text}/>\r\n                                </Form.Group>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row>\r\n                            <Col md={{ span: 5, offset: 1 }}>\r\n                                <Button onClick={() => this.handleClick()}>\r\n                                    Submit\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Container>\r\n\r\n                    <div className=\"comment-div\">\r\n                        <div className=\"comment-container\">\r\n                            {this.state.Comments.map(comment => {\r\n                                if(comment[1] === null) {\r\n                                    return;\r\n                                }\r\n                                return (\r\n                                    <div>\r\n                                        <h5>{comment[0]}</h5>\r\n                                        <p className=\"comment-p\">{comment[1]} </p>\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default function CommentFunction(props) {\r\n    const value = useContext(FirebaseContext);\r\n    \r\n    return <Comment firebase={value} prop={props}></Comment>\r\n}\r\n","import React from 'react';\r\n \r\nconst AuthUserContext = React.createContext(null);\r\n \r\nexport default AuthUserContext;","/* Temp routes for testing, update later for prod */\r\nexport const ROUTES = {\r\n    PROFILE: \"/profile/:name\",\r\n    CREATE: \"/create_story\",\r\n    LOGIN: \"/login\",\r\n    SIGNUP: \"/signup\",\r\n    FORGOT_PASSWORD: \"/forgot_password\",\r\n    HOME: \"/\",\r\n    COMMENT: \"/comment/:title\"\r\n  };","import React, { useState, useContext } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport Authorization from './session/Authorization';\r\nimport { FirebaseContext } from \"./firebase\";\r\nimport { Container, Col, Row, Form, Button } from 'react-bootstrap';\r\n\r\nfunction CreateStory() {\r\n    const [url, setUrl] = useState('');\r\n    const [title, setTitle] = useState('');\r\n    const [validationUrl, setValidationUrl] = useState(false);\r\n    const [validationTitle, setValidationTitle] = useState(false);\r\n    const firebase = useContext(FirebaseContext);\r\n    const history = useHistory();\r\n\r\n    const isValidUrl = () => {\r\n        return url.includes(\".com\") ? true : false\r\n    }\r\n\r\n    const isValidTitle = () => {\r\n        const isValid = title === '' ? false : true;\r\n        return isValid;\r\n    }\r\n\r\n    const submit = () => {\r\n        const isTitleTrue = !isValidTitle() ? setValidationTitle(true) : setValidationTitle(false);\r\n        const isUrlTrue = !isValidUrl() ? setValidationUrl(true) : setValidationUrl(false);\r\n\r\n        if(title && url) {\r\n            const username = localStorage.getItem('Username')\r\n            const createPost = firebase.createPost(title, url, username);\r\n            history.push('/');\r\n        }\r\n\r\n    }\r\n    return (\r\n        <Container fluid>\r\n            <Row>\r\n                <Col md={{ span: 4, offset: 1 }}>\r\n                    <Form>\r\n                        <Form.Group controlId=\"formGroupEmail\">\r\n                            <Form.Label>Title</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Title\" \r\n                                onChange={(e) => setTitle(e.target.value)}\r\n                                isInvalid={validationTitle}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please enter a valid Title\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                        <Form.Group controlId=\"formGroupPassword\">\r\n                            <Form.Label>URL</Form.Label>\r\n                            <Form.Control type=\"text\" placeholder=\"Enter Valid URL\" \r\n                            onChange={(e) => setUrl(e.target.value)}\r\n                            isInvalid={validationUrl}\r\n                            />\r\n                            <Form.Control.Feedback type=\"invalid\">\r\n                                Please enter a valid url\r\n                            </Form.Control.Feedback>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Col>\r\n            </Row>\r\n\r\n            <Row>\r\n                <Col md={{ span: 4, offset: 1 }}>\r\n                    <Button onClick={() => submit()}>Create Post</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nconst condition = authUser => !!authUser;\r\n\r\nexport default Authorization(condition)(CreateStory);","import React from \"react\";\r\nimport { withRouter } from \"../../../node_modules/react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../firebase\";\r\nimport { ROUTES } from \"../../routes\";\r\n\r\nconst Authorization = (condition) => (Component) => {\r\n  class Authorization extends React.Component {\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        (authUser) => {\r\n          if (!condition(authUser)) {\r\n            this.props.history.push(ROUTES.LOGIN);\r\n          }\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Consumer>\r\n          {authUser =>\r\n            condition(authUser) ? <Component {...this.props} /> : null\r\n          }\r\n        </AuthUserContext.Consumer>\r\n      );\r\n    }\r\n  }\r\n\r\n  return compose(withRouter, withFirebase)(Authorization);\r\n};\r\n\r\nexport default Authorization;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport { withFirebase } from \"../firebase\";\r\nimport { ROUTES } from \"../../routes\";\r\n\r\nconst ForgetPasswordPage = () => (\r\n  <div>\r\n    <h1>Forget Password</h1>\r\n    <ForgetPasswordForm />\r\n  </div>\r\n);\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  error: null,\r\n};\r\n\r\nclass ForgetPasswordFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { email } = this.state;\r\n\r\n    this.props.firebase\r\n      .doPasswordReset(email)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, error } = this.state;\r\n    const isInvalid = email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <input\r\n          name=\"email\"\r\n          value={this.state.email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Reset My Password\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst ForgetPasswordLink = () => (\r\n  <p>\r\n    <Link to={ROUTES.FORGOT_PASSWORD}>Forgot Password?</Link>\r\n  </p>\r\n);\r\n\r\nexport default ForgetPasswordPage;\r\n\r\nconst ForgetPasswordForm = withFirebase(ForgetPasswordFormBase);\r\n\r\nexport { ForgetPasswordForm, ForgetPasswordLink };","import React, { Component } from \"react\";\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport { compose } from 'recompose';\r\n\r\nimport { withFirebase } from '../firebase';\r\nimport { ROUTES } from \"../../routes\";\r\n \r\nclass SignUpPage extends Component{\r\n render(){\r\n     return(\r\n        <div>\r\n        <h1>SignUp</h1>\r\n        <SignUpForm />\r\n      </div>\r\n     );\r\n } \r\n}\r\n\r\nconst INITIAL_STATE = {\r\n    username: '',\r\n    email: '',\r\n    passwordOne: '',\r\n    passwordTwo: '',\r\n    error: null,\r\n};\r\n\r\nclass SignUpFormBase extends Component{\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = { ...INITIAL_STATE };\r\n    }\r\n\r\n    onSubmit = event => {\r\n        const { username, email, passwordOne } = this.state;\r\n\r\n        this.props.firebase\r\n            .doCreateUserWithEmailAndPassword(email, passwordOne)\r\n            .then(authUser => {\r\n                return this.props.firebase\r\n                  .user(authUser.user.uid)\r\n                  .set({\r\n                    username,\r\n                    email,\r\n                });\r\n            })\r\n            .then(() =>{\r\n                this.setState({ ...INITIAL_STATE});\r\n                this.props.firebase.createProfile(username, email);\r\n                localStorage.setItem('Email', email);\r\n                localStorage.setItem('Username', username);\r\n                this.props.history.push(ROUTES.HOME);\r\n            })\r\n            .catch(error => {\r\n                this.setState({ error });\r\n            })\r\n        event.preventDefault();\r\n    };\r\n\r\n    onChange = event => {\r\n        this.setState({[event.target.name]: event.target.value });\r\n    };\r\n\r\n    render(){\r\n        const {\r\n            username,\r\n            email,\r\n            passwordOne,\r\n            passwordTwo,\r\n            error,\r\n        } = this.state;\r\n\r\n        const isInvalid =\r\n        passwordOne !== passwordTwo ||\r\n        passwordOne === '' ||\r\n        email === '' ||\r\n        username === '';\r\n\r\n        return(\r\n            <form onSubmit={this.onSubmit}>\r\n                <p>Enter Your Username:</p>\r\n                <input\r\n                    name= \"username\"\r\n                    value= {username}\r\n                    onChange= {this.onChange}\r\n                    type= \"text\"\r\n                    placeholder= \"Enter Username\"\r\n                />\r\n                <p>Enter Your Email:</p>\r\n                <input\r\n                    name= \"email\"\r\n                    value= {email}\r\n                    onChange= {this.onChange}\r\n                    type= \"text\"\r\n                    placeholder= \"Email Address\"\r\n                />\r\n                <br />\r\n                <p>Enter Password:</p>\r\n                <input\r\n                    name= \"passwordOne\"\r\n                    value= {passwordOne}\r\n                    onChange= {this.onChange}\r\n                    type= \"text\"\r\n                    placeholder= \"Password\"\r\n                />\r\n                <p>Confirm Password:</p>\r\n                <input\r\n                    name= \"passwordTwo\"\r\n                    value= {passwordTwo}\r\n                    onChange= {this.onChange}\r\n                    type= \"text\"\r\n                    placeholder= \"Confirm Password\"\r\n                />\r\n                <button disabled={isInvalid} type=\"submit\">Sign Up</button>\r\n                {error && <p>{error.message}</p>}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nconst SignUpLink = () =>(\r\n    <p>\r\n        Dont have an account? <Link to={ROUTES.SIGNUP}>Sign Up</Link>\r\n    </p>\r\n);\r\n\r\nconst SignUpForm = compose(\r\n    withRouter,\r\n    withFirebase,\r\n)(SignUpFormBase);\r\n\r\nexport default SignUpPage;\r\n\r\nexport {SignUpForm, SignUpLink};","import React, { Component } from \"react\";\r\nimport { withRouter } from \"../../../node_modules/react-router-dom\";\r\nimport { compose } from \"recompose\";\r\n\r\nimport { ForgetPasswordLink } from \"./forgotPassword\";\r\nimport { SignUpLink } from \"./signup\";\r\nimport { withFirebase } from \"../firebase\";\r\nimport { ROUTES } from \"../../routes\";\r\n\r\n\r\nclass LoginIn extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>SignIn</h1>\r\n        <LogInForm />\r\n        <ForgetPasswordLink />\r\n        <SignUpLink />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst INITIAL_STATE = {\r\n  email: \"\",\r\n  password: \"\",\r\n  error: null,\r\n};\r\n\r\nclass LogInFormBase extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { ...INITIAL_STATE };\r\n  }\r\n\r\n  onSubmit = (event) => {\r\n    const { email, password } = this.state;\r\n\r\n    this.props.firebase\r\n      .doSignInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        this.setState({ ...INITIAL_STATE });\r\n        localStorage.setItem('Email', email);\r\n        const getProfile = this.props.firebase.loadProfile(email)\r\n        getProfile.then(profile => {\r\n          localStorage.setItem('Username', profile.Username);  \r\n        })\r\n\r\n        this.props.history.push(ROUTES.HOME);\r\n      })\r\n      .catch((error) => {\r\n        this.setState({ error });\r\n      });\r\n\r\n    event.preventDefault();\r\n  };\r\n\r\n  onChange = (event) => {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  render() {\r\n    const { email, password, error } = this.state;\r\n\r\n    const isInvalid = password === \"\" || email === \"\";\r\n\r\n    return (\r\n      <form onSubmit={this.onSubmit}>\r\n        <p>Enter Your Email:</p>\r\n        <input\r\n          name=\"email\"\r\n          value={email}\r\n          onChange={this.onChange}\r\n          type=\"text\"\r\n          placeholder=\"Email Address\"\r\n        />\r\n        <p>Enter Password:</p>\r\n        <input\r\n          name=\"password\"\r\n          value={password}\r\n          onChange={this.onChange}\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n        />\r\n        <br />\r\n        <button disabled={isInvalid} type=\"submit\">\r\n          Sign In\r\n        </button>\r\n\r\n        {error && <p>{error.message}</p>}\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst LogInForm = compose(withRouter, withFirebase)(LogInFormBase);\r\n\r\nexport default LoginIn;\r\n\r\nexport { LogInForm };\r\n","import React from \"react\";\r\n\r\nimport AuthUserContext from \"./context\";\r\nimport { withFirebase } from \"../firebase\";\r\n\r\nconst withAuthentication = (Component) => {\r\n  class WithAuthentication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n\r\n      this.state = {\r\n        authUser: null,\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      this.listener = this.props.firebase.auth.onAuthStateChanged(\r\n        (authUser) => {\r\n          authUser\r\n            ? this.setState({ authUser })\r\n            : this.setState({ authUser: null });\r\n        }\r\n      );\r\n    }\r\n\r\n    componentWillUnmount() {\r\n      this.listener();\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <AuthUserContext.Provider value={this.state.authUser}>\r\n          <Component {...this.props} />\r\n        </AuthUserContext.Provider>\r\n      );\r\n    }\r\n  }\r\n\r\n  return withFirebase(WithAuthentication);\r\n};\r\n\r\nexport default withAuthentication;\r\n","import React from \"react\";\r\nimport { withFirebase } from \"../firebase\";\r\n\r\nconst SignOutButton = ({ firebase }) => (\r\n  <button type=\"button\" onClick={firebase.doSignOut}>\r\n    Sign Out\r\n  </button>\r\n);\r\n\r\nexport default withFirebase(SignOutButton);","import React from \"react\";\r\nimport { Navbar, Nav, Button } from \"react-bootstrap\";\r\nimport { ROUTES } from \"../routes\";\r\nimport { AuthUserContext } from \"./session\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport SignOutButton from \"./authentication/signout\";\r\n\r\nconst Navigation = () => (\r\n  <div>\r\n    <AuthUserContext.Consumer>\r\n      {authUser => authUser ? <NavigationAuth /> : <NavigationNonAuth />}\r\n    </AuthUserContext.Consumer>\r\n  </div>\r\n);\r\n\r\nconst NavigationAuth = () => (\r\n  <div className=\"bootstrap-scoped\">\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n      <Navbar.Brand href={ROUTES.HOME} className=\"brand-name\">\r\n        Hacker News\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href={ROUTES.STORIES}>Stories</Nav.Link>\r\n          <Nav.Link href={ROUTES.CREATE}>Create Story</Nav.Link>\r\n        </Nav>\r\n        <Nav.Link className=\"sign_out\" href={ROUTES.HOME}>\r\n          <SignOutButton />\r\n        </Nav.Link>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </div>\r\n);\r\n\r\nconst NavigationNonAuth = () => (\r\n  <div className=\"bootstrap-scoped\">\r\n    <Navbar bg=\"dark\" variant=\"dark\" expand=\"lg\">\r\n    <Navbar.Brand href={ROUTES.HOME} className=\"brand-name\">\r\n        Hacker News\r\n      </Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href={ROUTES.STORIES}>Stories</Nav.Link>\r\n        </Nav>\r\n        <Nav.Link className=\"sign_in\" href={ROUTES.LOGIN}>\r\n          <Button variant=\"outline-info\">\r\n            <b>LogIn</b>\r\n          </Button>\r\n        </Nav.Link>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  </div>\r\n);\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Profile from \"./components/Profile\";\r\nimport HomeFunction from './components/Home';\r\nimport CommentFunction from './components/Comment';\r\nimport createStory from \"./components/createStory\";\r\nimport login from \"./components/authentication/login\";\r\nimport SignUpPage from \"./components/authentication/signup\"\r\nimport forgotPassword from \"./components/authentication/forgotPassword\";\r\nimport Navigation from \"./components/Navigation\"\r\nimport { withAuthentication } from \"./components/session\";\r\n\r\nimport './App.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n/* Misc */\r\nimport { ROUTES } from \"./routes\";\r\n\r\nconst App = () => (\r\n    <Router>\r\n      <Navigation />\r\n        <Switch>\r\n          <Route exact path={ROUTES.HOME} component={HomeFunction} />\r\n          <Route exact path={ROUTES.COMMENT} component={CommentFunction} />\r\n          <Route exact path={ROUTES.PROFILE} component={Profile} />\r\n          <Route exact path={ROUTES.CREATE} component={createStory} />\r\n          <Route exact path={ROUTES.LOGIN} component={login} />\r\n          <Route exact path={ROUTES.FORGOT_PASSWORD} component={forgotPassword} />\r\n          <Route exact path={ROUTES.SIGNUP} component={SignUpPage} />\r\n        </Switch>\r\n    </Router>\r\n);\r\n\r\nexport default withAuthentication(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Firebase, { FirebaseContext } from './components/firebase';\r\n\r\nReactDOM.render(\r\n  <FirebaseContext.Provider value={new Firebase()}>\r\n    <App />\r\n  </FirebaseContext.Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}